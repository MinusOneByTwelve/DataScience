2020-04-19 12:17:08,780 ERROR [Worker-6] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2020-04-19 12:17:08,783 ERROR [Worker-6] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-04-19 12:17:12,085  WARN [Worker-4] - ScalaProject - Project analytics has platform default sourceLevel.
2020-04-19 12:17:12,087  WARN [Worker-4] - ScalaProject - Project analytics runs on platform default installation.
2020-04-19 12:17:12,438  WARN [Worker-4] - ScalaProject - Project analytics has platform default sourceLevel.
2020-04-19 12:17:12,439  WARN [Worker-4] - ScalaProject - Project analytics runs on platform default installation.
2020-04-19 12:17:12,455  WARN [Worker-6] - ScalaProject - Project analytics has platform default sourceLevel.
2020-04-19 12:17:12,456  WARN [Worker-6] - ScalaProject - Project analytics runs on platform default installation.
2020-04-19 12:17:12,748  WARN [Worker-1] - ScalaProject - Project analytics has platform default sourceLevel.
2020-04-19 12:17:12,748  WARN [Worker-1] - ScalaProject - Project analytics runs on platform default installation.
2020-04-19 12:18:10,944  WARN [main] - ScalaProject - Project analytics has platform default sourceLevel.
2020-04-19 12:18:10,945  WARN [main] - ScalaProject - Project analytics runs on platform default installation.
2020-04-19 12:18:14,099  WARN [Worker-10] - ScalaProject - Project analytics has platform default sourceLevel.
2020-04-19 12:18:14,099  WARN [Worker-10] - ScalaProject - Project analytics runs on platform default installation.
2020-04-28 10:46:22,157 ERROR [ModalContext] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.aether.internal.impl.DefaultLocalRepositoryProvider).
2020-04-28 10:46:22,158 ERROR [ModalContext] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-04-28 10:50:06,708  WARN [main] - ScalaProject - Project scala has platform default sourceLevel.
2020-04-28 10:50:06,710  WARN [main] - ScalaProject - Project scala runs on platform default installation.
2020-04-28 10:50:06,935  WARN [main] - ScalaProject - Project scala has platform default sourceLevel.
2020-04-28 10:50:06,936  WARN [main] - ScalaProject - Project scala runs on platform default installation.
2020-04-28 10:50:07,118  WARN [Worker-4] - ScalaProject - Project scala has platform default sourceLevel.
2020-04-28 10:50:07,119  WARN [Worker-4] - ScalaProject - Project scala runs on platform default installation.
2020-04-28 10:50:32,184  WARN [Worker-4] - ScalaProject - Project scala has platform default sourceLevel.
2020-04-28 10:50:32,186  WARN [Worker-4] - ScalaProject - Project scala runs on platform default installation.
2020-04-28 10:51:18,485  WARN [main] - ScalaProject - Project scala has platform default sourceLevel.
2020-04-28 10:51:18,485  WARN [main] - ScalaProject - Project scala runs on platform default installation.
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val hello: String = "hellow world";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(hello);$skip(178); 
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // name, then the type.
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VARIABLES are mutable
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-04-28 10:57:09,564  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Some other types
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // String printing tricks
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Concatenating stuff with +:
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // printf style:
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                   
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting in variables:
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-04-28 10:57:09,565  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                  
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Using regular expressions:
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(answer);$skip(54); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Dealing with booleans
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-04-28 10:57:09,566  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:09,567  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-04-28 10:57:09,567  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-04-28 10:57:09,567  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(z(10/5))}
2020-04-28 10:57:09,567  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // EXERCISE
2020-04-28 10:57:09,567  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-04-28 10:57:09,567  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // three decimal places of precision to the right.
2020-04-28 10:57:09,567  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - }
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val hello: String = "hellow world";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(hello);$skip(178); 
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // name, then the type.
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VARIABLES are mutable
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,207  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Some other types
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // String printing tricks
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Concatenating stuff with +:
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // printf style:
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-04-28 10:57:26,208  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                   
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting in variables:
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                  
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Using regular expressions:
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-04-28 10:57:26,209  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(answer);$skip(54); 
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Dealing with booleans
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-04-28 10:57:26,210  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(z(10/5))}
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // EXERCISE
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // three decimal places of precision to the right.
2020-04-28 10:57:26,211  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - }
2020-04-28 11:02:52,753  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val hello: String = "hellow world";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(hello);$skip(178); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // name, then the type.
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // VARIABLES are mutable
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Some other types
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,758  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // String printing tricks
2020-04-28 11:02:52,759  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Concatenating stuff with +:
2020-04-28 11:02:52,759  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-04-28 11:02:52,759  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,759  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // printf style:
2020-04-28 11:02:52,759  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -                                                   
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Substituting in variables:
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -                                                  
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Using regular expressions:
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(answer);$skip(54); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Dealing with booleans
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-04-28 11:02:52,760  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-04-28 11:02:52,761  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   
2020-04-28 11:02:52,761  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-04-28 11:02:52,761  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-04-28 11:02:52,761  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   println(z(10/5))}
2020-04-28 11:02:52,761  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // EXERCISE
2020-04-28 11:02:52,761  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-04-28 11:02:52,761  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler -   // three decimal places of precision to the right.
2020-04-28 11:02:52,761  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-12] - ResidentCompiler - }
2020-04-28 11:21:33,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(132); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val hello: String = "hello world";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(hello);$skip(178); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // name, then the type.
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // VARIABLES are mutable
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Some other types
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-04-28 11:21:33,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // String printing tricks
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Concatenating stuff with +:
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // printf style:
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -                                                   
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Substituting in variables:
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -                                                  
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Using regular expressions:
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(answer);$skip(54); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Dealing with booleans
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(z(10/5))}
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // EXERCISE
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // three decimal places of precision to the right.
2020-04-28 11:21:33,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler - }
2020-04-28 11:32:33,495  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(132); 
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val hello: String = "hello world";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(hello);$skip(178); 
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // name, then the type.
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // VARIABLES are mutable
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); val res$0 = 
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   helloThere = hello + " There!";System.out.println("""res0: <error> = """ + $show(res$0));$skip(22); 
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-04-28 11:32:33,497  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Some other types
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // String printing tricks
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Concatenating stuff with +:
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // printf style:
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -                                                   
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Substituting in variables:
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -                                                  
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Using regular expressions:
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(answer);$skip(54); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Dealing with booleans
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(z(10/5))}
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // EXERCISE
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // three decimal places of precision to the right.
2020-04-28 11:32:33,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler - }
2020-04-28 11:32:35,920 ERROR [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler - ## Exception when compiling 1 sources to [C:\eclipse-scala\workspace\analytics\.worksheet\bin]
Resource '/analytics/.worksheet/src/LearningScala1.scala' does not exist.
org.eclipse.core.internal.resources.Resource.checkExists(Resource.java:335)
org.eclipse.core.internal.resources.Resource.checkAccessible(Resource.java:209)
org.eclipse.core.internal.resources.Resource.createMarker(Resource.java:696)
org.scalaide.core.resources.MarkerFactory.create(MarkerFactory.scala:48)
org.scalaide.core.internal.builder.zinc.SbtBuildReporter.$anonfun$createMarker$4(SbtBuildReporter.scala:111)
org.scalaide.core.internal.builder.zinc.SbtBuildReporter.$anonfun$createMarker$4$adapted(SbtBuildReporter.scala:108)
scala.Option.map(Option.scala:146)
org.scalaide.core.internal.builder.zinc.SbtBuildReporter.$anonfun$createMarker$3(SbtBuildReporter.scala:108)
scala.Option.flatMap(Option.scala:171)
org.scalaide.core.internal.builder.zinc.SbtBuildReporter.$anonfun$createMarker$2(SbtBuildReporter.scala:107)
scala.Option.flatMap(Option.scala:171)
org.scalaide.core.internal.builder.zinc.SbtBuildReporter.$anonfun$createMarker$1(SbtBuildReporter.scala:106)
scala.Option.flatMap(Option.scala:171)
org.scalaide.core.internal.builder.zinc.SbtBuildReporter.createMarker(SbtBuildReporter.scala:105)
org.scalaide.core.internal.builder.zinc.SbtBuildReporter.log(SbtBuildReporter.scala:83)
xsbt.DelegatingReporter.info0(DelegatingReporter.scala:125)
xsbt.DelegatingReporter.info0(DelegatingReporter.scala:102)
scala.reflect.internal.Reporter.error(Reporting.scala:82)
scala.tools.nsc.typechecker.Contexts$ImmediateReporter.handleError(Contexts.scala:1377)
scala.tools.nsc.typechecker.Contexts$ContextReporter.issue(Contexts.scala:1254)
scala.tools.nsc.typechecker.Contexts$Context.issue(Contexts.scala:573)
scala.tools.nsc.typechecker.Typers$Typer$$anonfun$onError$2$4.apply(Typers.scala:4490)
scala.tools.nsc.typechecker.Typers$Typer$$anonfun$onError$2$4.apply(Typers.scala:4490)
scala.collection.immutable.List.foreach(List.scala:392)
scala.tools.nsc.typechecker.Typers$Typer.onError$2(Typers.scala:4490)
scala.tools.nsc.typechecker.Typers$Typer.tryTypedApply$1(Typers.scala:4497)
scala.tools.nsc.typechecker.Typers$Typer.normalTypedApply$1(Typers.scala:4578)
scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:4608)
scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5370)
scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5387)
scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5423)
scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5450)
scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5397)
scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5401)
scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5492)
scala.tools.nsc.typechecker.Typers$Typer.computeType(Typers.scala:5583)
scala.tools.nsc.typechecker.Namers$Namer.assignTypeToTree(Namers.scala:967)
scala.tools.nsc.typechecker.Namers$Namer.methodSig(Namers.scala:1322)
scala.tools.nsc.typechecker.Namers$Namer.getSig$1(Namers.scala:1638)
scala.tools.nsc.typechecker.Namers$Namer.typeSig(Namers.scala:1650)
scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply$mcV$sp(Namers.scala:869)
scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply(Namers.scala:868)
scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply(Namers.scala:868)
scala.tools.nsc.typechecker.Namers$Namer.scala$tools$nsc$typechecker$Namers$Namer$$logAndValidate(Namers.scala:1677)
scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:868)
scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:860)
scala.tools.nsc.typechecker.Namers$$anon$1.completeImpl(Namers.scala:1799)
scala.tools.nsc.typechecker.Namers$LockingTypeCompleter$class.complete(Namers.scala:1807)
scala.tools.nsc.typechecker.Namers$$anon$1.complete(Namers.scala:1797)
scala.reflect.internal.Symbols$Symbol.info(Symbols.scala:1535)
scala.reflect.internal.Symbols$Symbol.initialize(Symbols.scala:1680)
scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5035)
scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5423)
scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5450)
scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5397)
scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5401)
scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5481)
scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3042)
scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3150)
scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3150)
scala.collection.immutable.List.loop$1(List.scala:176)
scala.collection.immutable.List.mapConserve(List.scala:200)
scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3150)
scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1916)
scala.tools.nsc.typechecker.Typers$Typer.typedModuleDef(Typers.scala:1803)
scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5337)
scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5386)
scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5423)
scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5450)
scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5397)
scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5401)
scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5481)
scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3042)
scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3150)
scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3150)
scala.collection.immutable.List.loop$1(List.scala:176)
scala.collection.immutable.List.mapConserve(List.scala:200)
scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3150)
scala.tools.nsc.typechecker.Typers$Typer.typedPackageDef$1(Typers.scala:5042)
scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5339)
scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5386)
scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5423)
scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5450)
scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5397)
scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5401)
scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5477)
scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.apply(Analyzer.scala:102)
scala.tools.nsc.Global$GlobalPhase$$anonfun$applyPhase$1.apply$mcV$sp(Global.scala:467)
scala.tools.nsc.Global$GlobalPhase.withCurrentUnit(Global.scala:458)
scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:467)
scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3$$anonfun$run$1.apply(Analyzer.scala:94)
scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3$$anonfun$run$1.apply(Analyzer.scala:93)
scala.collection.Iterator$class.foreach(Iterator.scala:891)
scala.collection.AbstractIterator.foreach(Iterator.scala:1334)
scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.run(Analyzer.scala:93)
scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1528)
scala.tools.nsc.Global$Run.compileUnits(Global.scala:1513)
scala.tools.nsc.Global$Run.compileSources(Global.scala:1508)
scala.tools.nsc.Global$Run.compile(Global.scala:1609)
xsbt.CachedCompiler0.run(CompilerInterface.scala:131)
xsbt.CachedCompiler0.run(CompilerInterface.scala:106)
xsbt.CompilerInterface.run(CompilerInterface.scala:32)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
java.lang.reflect.Method.invoke(Unknown Source)
sbt.internal.inc.AnalyzingCompiler.call(AnalyzingCompiler.scala:237)
sbt.internal.inc.AnalyzingCompiler.compile(AnalyzingCompiler.scala:111)
sbt.internal.inc.AnalyzingCompiler.compile(AnalyzingCompiler.scala:90)
sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$3(MixedAnalyzingCompiler.scala:81)
scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
sbt.internal.inc.MixedAnalyzingCompiler.timed(MixedAnalyzingCompiler.scala:132)
sbt.internal.inc.MixedAnalyzingCompiler.compileScala$1(MixedAnalyzingCompiler.scala:72)
sbt.internal.inc.MixedAnalyzingCompiler.compile(MixedAnalyzingCompiler.scala:115)
sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileInternal$1(IncrementalCompilerImpl.scala:305)
sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileInternal$1$adapted(IncrementalCompilerImpl.scala:305)
sbt.internal.inc.Incremental$.doCompile(Incremental.scala:101)
sbt.internal.inc.Incremental$.$anonfun$compile$4(Incremental.scala:82)
sbt.internal.inc.IncrementalCommon.recompileClasses(IncrementalCommon.scala:118)
sbt.internal.inc.IncrementalCommon.cycle(IncrementalCommon.scala:64)
sbt.internal.inc.Incremental$.$anonfun$compile$3(Incremental.scala:84)
sbt.internal.inc.Incremental$.manageClassfiles(Incremental.scala:129)
sbt.internal.inc.Incremental$.compile(Incremental.scala:75)
sbt.internal.inc.IncrementalCompile$.apply(Compile.scala:70)
sbt.internal.inc.IncrementalCompilerImpl.compileInternal(IncrementalCompilerImpl.scala:309)
sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileIncrementally$1(IncrementalCompilerImpl.scala:267)
sbt.internal.inc.IncrementalCompilerImpl.handleCompilationError(IncrementalCompilerImpl.scala:158)
sbt.internal.inc.IncrementalCompilerImpl.compileIncrementally(IncrementalCompilerImpl.scala:237)
sbt.internal.inc.IncrementalCompilerImpl.compile(IncrementalCompilerImpl.scala:145)
org.scalaide.core.internal.builder.zinc.ResidentCompiler.compile(ResidentCompiler.scala:85)
org.scalaide.worksheet.runtime.WorksheetRunner$$anonfun$receive$1.applyOrElse(WorksheetRunner.scala:88)
akka.actor.Actor.aroundReceive(Actor.scala:497)
akka.actor.Actor.aroundReceive$(Actor.scala:495)
org.scalaide.worksheet.runtime.WorksheetRunner.aroundReceive(WorksheetRunner.scala:48)
akka.actor.ActorCell.receiveMessage(ActorCell.scala:526)
akka.actor.ActorCell.invoke(ActorCell.scala:495)
akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
akka.dispatch.Mailbox.run(Mailbox.scala:224)
akka.dispatch.Mailbox.exec(Mailbox.scala:234)
java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
           
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(132); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val hello: String = "hello world";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(hello);$skip(178); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // name, then the type.
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // VARIABLES are mutable
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Some other types
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // String printing tricks
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Concatenating stuff with +:
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // printf style:
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-04-28 11:32:47,498  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -                                                   
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Substituting in variables:
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -                                                  
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Using regular expressions:
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(answer);$skip(54); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Dealing with booleans
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(z(10/5))}
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // EXERCISE
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // three decimal places of precision to the right.
2020-04-28 11:32:47,499  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler - }
2020-04-28 12:02:29,633  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - object LearningScala2 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(141); 
2020-04-28 12:02:29,636  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   // Flow control
2020-04-28 12:02:29,636  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   
2020-04-28 12:02:29,636  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   // If / else syntax
2020-04-28 12:02:29,636  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   if (1 > 3) println("Impossible!") else println("The world makes sense.");$skip(122); 
2020-04-28 12:02:29,636  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   
2020-04-28 12:02:29,636  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   if (1 > 3) {
2020-04-28 12:02:29,636  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	println("Impossible!")
2020-04-28 12:02:29,636  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	println("Impossible!")
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   } else {
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	println("The world makes sense.")
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   };$skip(68); 
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   // Matching - like switch in other languages:
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   val number = 3;System.out.println("""number  : Int = """ + $show(number ));$skip(148); 
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   number match {
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	case 1 => {println("One")}
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	case 2 => println("Two")
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	case 3 => println("Three")
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	case _ => println("Something else")
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -  	};$skip(139); 
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -  	//for(int x = 1;x<5;x++)
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -  	// For loops [1,2,3,4] iterator 0 cursor
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -  	for (x <- 1 to 4) {
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -  		val squared = x * x
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -  		println(squared)
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -  	};$skip(81); 
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -                                                   
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   // While loops
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   var x = 10;System.out.println("""x  : Int = """ + $show(x ));$skip(47); 
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   while (x >= 0) {
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	println(x)
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   	x -= 1
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   };$skip(59); 
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -                                                   
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   x = 0;$skip(42); 
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -   do { println(x); x+=1 } while (x <= 10);$skip(154); val res$0 = 
2020-04-28 12:02:29,637  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -                                                   
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -    // Expressions
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -    // "Returns" the final value in a block automatically
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -    
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -    {val x = 10; x + 20};System.out.println("""res0: Int = """ + $show(res$0));$skip(81); 
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler -                                                 
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - 	 println({val x = 10; x + 20})}
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - 	 
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - 	 // EXERCISE
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - 	 // Write some code that prints out the first 10 values of the Fibonacci sequence.
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - 	 // This is the sequence where every number is the sum of the two numbers before it.
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - 	 // So, the result should be 0, 1, 1, 2, 3, 5, 8, 13, 21, 34
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - 	 
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - 	   
2020-04-28 12:02:29,638  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-20] - ResidentCompiler - }
2020-04-28 12:02:36,580  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - object LearningScala2 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(141); 
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   // Flow control
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   // If / else syntax
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   if (1 > 3) println("Impossible!") else println("The world makes sense.");$skip(122); 
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   if (1 > 3) {
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	println("Impossible!")
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	println("Impossible!")
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   } else {
2020-04-28 12:02:36,581  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	println("The world makes sense.")
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   };$skip(68); 
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   // Matching - like switch in other languages:
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   val number = 3;System.out.println("""number  : Int = """ + $show(number ));$skip(148); 
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   number match {
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	case 1 => {println("One")}
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	case 2 => println("Two")
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	case 3 => println("Three")
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	case _ => println("Something else")
2020-04-28 12:02:36,582  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -  	};$skip(139); 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -  	//for(int x = 1;x<5;x++)
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -  	// For loops [1,2,3,4] iterator 0 cursor
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -  	for (x <- 1 to 4) {
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -  		val squared = x * x
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -  		println(squared)
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -  	};$skip(81); 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -                                                   
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   // While loops
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   var x = 10;System.out.println("""x  : Int = """ + $show(x ));$skip(47); 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   while (x >= 0) {
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	println(x)
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   	x -= 1
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   };$skip(59); 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -                                                   
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   x = 0;$skip(42); 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -   do { println(x); x+=1 } while (x <= 10);$skip(154); val res$0 = 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -                                                   
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -    // Expressions
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -    // "Returns" the final value in a block automatically
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -    
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -    {val x = 10; x + 20};System.out.println("""res0: Int = """ + $show(res$0));$skip(81); 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler -                                                 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - 	 println({val x = 10; x + 20})}
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - 	 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - 	 // EXERCISE
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - 	 // Write some code that prints out the first 10 values of the Fibonacci sequence.
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - 	 // This is the sequence where every number is the sum of the two numbers before it.
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - 	 // So, the result should be 0, 1, 1, 2, 3, 5, 8, 13, 21, 34
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - 	 
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - 	   
2020-04-28 12:02:36,583  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ResidentCompiler - }
2020-04-29 08:57:01,737 ERROR [ModalContext] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2020-04-29 08:57:01,740 ERROR [ModalContext] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-04-29 08:57:02,103  WARN [ModalContext] - ScalaProject - Project scala has platform default sourceLevel.
2020-04-29 08:57:02,104  WARN [ModalContext] - ScalaProject - Project scala runs on platform default installation.
2020-04-29 08:57:02,142  WARN [ModalContext] - ScalaProject - Project scala has platform default sourceLevel.
2020-04-29 08:57:02,142  WARN [ModalContext] - ScalaProject - Project scala runs on platform default installation.
2020-04-29 10:46:25,185 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-04-29 10:46:29,387 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-04-29 10:46:29,389 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-04-29 10:46:29,390 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-04-29 11:12:35,919 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-04-29 11:12:35,921 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-04-29 11:12:35,922 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-04-30 12:59:54,362 ERROR [Worker-3] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-04-30 12:59:54,367 ERROR [Worker-3] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-02 10:20:58,486 ERROR [ModalContext] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.aether.internal.impl.DefaultLocalRepositoryProvider).
2020-05-02 10:20:58,490 ERROR [ModalContext] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-02 10:26:04,229  WARN [main] - ScalaProject - Project learnscala has platform default sourceLevel.
2020-05-02 10:26:04,232  WARN [main] - ScalaProject - Project learnscala runs on platform default installation.
2020-05-02 10:26:04,530  WARN [main] - ScalaProject - Project learnscala has platform default sourceLevel.
2020-05-02 10:26:04,530  WARN [main] - ScalaProject - Project learnscala runs on platform default installation.
2020-05-02 10:26:04,783  WARN [Worker-1] - ScalaProject - Project learnscala has platform default sourceLevel.
2020-05-02 10:26:04,783  WARN [Worker-1] - ScalaProject - Project learnscala runs on platform default installation.
2020-05-02 10:26:08,810  WARN [Worker-1] - ScalaProject - Project learnscala has platform default sourceLevel.
2020-05-02 10:26:08,811  WARN [Worker-1] - ScalaProject - Project learnscala runs on platform default installation.
2020-05-02 10:26:20,975  WARN [main] - ScalaProject - Project learnscala has platform default sourceLevel.
2020-05-02 10:26:20,975  WARN [main] - ScalaProject - Project learnscala runs on platform default installation.
2020-05-02 10:54:06,452  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val hello: String = "hello rakesh";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(hello);$skip(178); 
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // name, then the type.
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // VARIABLES are mutable
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-05-02 10:54:06,454  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-05-02 10:54:06,455  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-05-02 10:54:06,455  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-05-02 10:54:06,455  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,455  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Some other types
2020-05-02 10:54:06,455  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-05-02 10:54:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // String printing tricks
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Concatenating stuff with +:
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // printf style:
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -                                                   
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Substituting in variables:
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -                                                  
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Using regular expressions:
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(answer);$skip(54); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Dealing with booleans
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-05-02 10:54:06,457  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(z(10/5))}
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // EXERCISE
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // three decimal places of precision to the right.
2020-05-02 10:54:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler - }
2020-05-02 10:54:20,858  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2020-05-02 10:54:20,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-05-02 10:54:20,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val hello: String = "hello rakesh";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-05-02 10:54:20,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(hello);$skip(178); 
2020-05-02 10:54:20,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-05-02 10:54:20,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // name, then the type.
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // VARIABLES are mutable
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Some other types
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // String printing tricks
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Concatenating stuff with +:
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // printf style:
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -                                                   
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Substituting in variables:
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -                                                  
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Using regular expressions:
2020-05-02 10:54:20,860  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(answer);$skip(54); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Dealing with booleans
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   println(z(10/5))}
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // EXERCISE
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-05-02 10:54:20,861  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler -   // three decimal places of precision to the right.
2020-05-02 10:54:20,862  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-6] - ResidentCompiler - }
2020-05-02 10:57:08,069  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(169); 
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // string hello = "hello Rakesh";
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val hello: String = "hello rakesh";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(hello);$skip(178); 
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // name, then the type.
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // VARIABLES are mutable
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Some other types
2020-05-02 10:57:08,078  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // String printing tricks
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Concatenating stuff with +:
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // printf style:
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -                                                   
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Substituting in variables:
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -                                                  
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Using regular expressions:
2020-05-02 10:57:08,079  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(answer);$skip(54); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Dealing with booleans
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   
2020-05-02 10:57:08,080  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-05-02 10:57:08,081  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-05-02 10:57:08,081  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   println(z(10/5))}
2020-05-02 10:57:08,081  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // EXERCISE
2020-05-02 10:57:08,081  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-05-02 10:57:08,081  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler -   // three decimal places of precision to the right.
2020-05-02 10:57:08,081  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-8] - ResidentCompiler - }
2020-05-02 10:57:58,092  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(170); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler - 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // string hello = "hello Rakesh";
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val hello: String = "hello rakesh";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(hello);$skip(178); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // name, then the type.
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // VARIABLES are mutable
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Some other types
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // String printing tricks
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Concatenating stuff with +:
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // printf style:
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -                                                   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Substituting in variables:
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -                                                  
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Using regular expressions:
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(answer);$skip(54); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Dealing with booleans
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-05-02 10:57:58,095  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   println(z(10/5))}
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // EXERCISE
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler -   // three decimal places of precision to the right.
2020-05-02 10:57:58,096  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-9] - ResidentCompiler - }
2020-05-02 11:25:10,730  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(170); 
2020-05-02 11:25:10,733  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler - 
2020-05-02 11:25:10,733  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-05-02 11:25:10,733  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // string hello = "hello Rakesh";
2020-05-02 11:25:10,733  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val hello: String = "hello rakesh";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(hello);$skip(178); 
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // name, then the type.
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // VARIABLES are mutable
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,734  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Some other types
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // String printing tricks
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Concatenating stuff with +:
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // printf style:
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -                                                   
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Substituting in variables:
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -                                                  
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Using regular expressions:
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(answer);$skip(54); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Dealing with booleans
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-05-02 11:25:10,735  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(z(10/5))}
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // EXERCISE
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // three decimal places of precision to the right.
2020-05-02 11:25:10,736  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler - }
2020-05-02 11:40:56,019  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(170); 
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler - 
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // string hello = "hello Rakesh";
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val hello: String = "hello rakesh";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(hello);$skip(178); 
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // name, then the type.
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // VARIABLES are mutable
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-05-02 11:40:56,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Some other types
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-05-02 11:40:56,023  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // String printing tricks
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Concatenating stuff with +:
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // printf style:
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -                                                   
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Substituting in variables:
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -                                                  
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Using regular expressions:
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(answer);$skip(54); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Dealing with booleans
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(z(10/5))}
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // EXERCISE
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // three decimal places of precision to the right.
2020-05-02 11:40:56,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler - }
2020-05-02 11:41:54,825  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(170); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler - 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // string hello = "hello Rakesh";
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val hello: String = "hello rakesh";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(hello);$skip(178); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // name, then the type.
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // VARIABLES are mutable
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Some other types
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-05-02 11:41:54,826  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // String printing tricks
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Concatenating stuff with +:
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // printf style:
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -                                                   
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Substituting in variables:
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -                                                  
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Using regular expressions:
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(answer);$skip(54); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Dealing with booleans
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(15); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   z(6) = "bla";$skip(19); 
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(z(10/5))}
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // EXERCISE
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-05-02 11:41:54,827  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // three decimal places of precision to the right.
2020-05-02 11:41:54,828  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler - }
2020-05-02 11:42:04,309  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(170); 
2020-05-02 11:42:04,309  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler - 
2020-05-02 11:42:04,309  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2020-05-02 11:42:04,309  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // string hello = "hello Rakesh";
2020-05-02 11:42:04,309  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val hello: String = "hello rakesh";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(hello);$skip(178); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // name, then the type.
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // VARIABLES are mutable
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(helloThere);$skip(302); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // For example, we could have done the same thing like this:
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(immutableHelloThere);$skip(91); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   //immutableHelloThere = "should work"
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Some other types
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // String printing tricks
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Concatenating stuff with +:
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // printf style:
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -                                                   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Substituting in variables:
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -                                                  
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Using regular expressions:
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(answer);$skip(54); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Dealing with booleans
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   val z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(15); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   z(2) = "bla";$skip(19); 
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   println(z(10/5))}
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // EXERCISE
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler -   // three decimal places of precision to the right.
2020-05-02 11:42:04,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-18] - ResidentCompiler - }
2020-05-02 12:49:50,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - object LearningScala4 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(296); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   // Data structures
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   // Tuples (Also really common with Spark!!)
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   // Immutable lists
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   // Often thought of as database fields, or columns.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   // Useful for passing around entire rows of data.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   val captainStuff = ("Picard", "Enterprise-D", "NCC-1701-D","StarTrek");System.out.println("""captainStuff  : (String, String, String, String) = """ + $show(captainStuff ));$skip(24); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   println(captainStuff);$skip(94); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   // You refer to individual fields with their ONE-BASED index:
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   println(captainStuff._1);$skip(27); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   println(captainStuff._2);$skip(27); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -   println(captainStuff._3);$skip(27); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  	println(captainStuff._4);$skip(90); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // You can create a key/value pair with ->
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  val picardsShip = "Picard" -> "Enterprise-D";System.out.println("""picardsShip  : (String, String) = """ + $show(picardsShip ));$skip(25); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  println(picardsShip._2);$skip(87); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // You can mix different types in a tuple
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  val aBunchOfStuff = ("Kirk", 1964, true);System.out.println("""aBunchOfStuff  : (String, Int, Boolean) = """ + $show(aBunchOfStuff ));$skip(275); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // Lists
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // Like a tuple, but it's an actual Collection object that has more functionality.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // Also, it cannot hold items of different types.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // It's a singly-linked list under the hood.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  val shipList = List("Enterprise", "Defiant", "Voyager", "Deep Space Nine");System.out.println("""shipList  : List[String] = """ + $show(shipList ));$skip(101); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // Access individual members using () with ZERO-BASED index (confused yet?)
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  println(shipList(1));$skip(93); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // head and tail give you the first item, and the remaining ones.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  println(shipList.head);$skip(24); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  println(shipList.tail);$skip(72); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // Iterating though a list
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  for (ship <- shipList) {println(ship)};$skip(187); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  // Let's apply a function literal to a list! map() can be used to apply any function to every item in a collection.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val backwardShips = shipList.map( (ship: String) => {ship.reverse});System.out.println("""backwardShips  : List[String] = """ + $show(backwardShips ));$skip(45); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -  for (ship <- backwardShips) {println(ship)};$skip(183); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler -                                                   
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // reduce() can be used to combine together all the items in a collection using some function.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val numberList = List(1, 2, 3, 4, 5);System.out.println("""numberList  : List[Int] = """ + $show(numberList ));$skip(56); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val sum = numberList.reduce( (x: Int, y: Int) => x + y);System.out.println("""sum  : Int = """ + $show(sum ));$skip(13); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - println(sum);$skip(158); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // filter() can remove stuff you don't want. Here we'll introduce wildcard syntax while we're at it.
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val iHateFives = numberList.filter( (x: Int) => x != 5);System.out.println("""iHateFives  : List[Int] = """ + $show(iHateFives ));$skip(44); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val iHateThrees = numberList.filter(_ != 3);System.out.println("""iHateThrees  : List[Int] = """ + $show(iHateThrees ));$skip(229); 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // Note that Spark has its own map, reduce, and filter functions that can distribute these operations. But they work the same way!
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // Also, you understand MapReduce now :)
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,026  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // Concatenating lists
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val moreNumbers = List(6, 7, 8);System.out.println("""moreNumbers  : List[Int] = """ + $show(moreNumbers ));$skip(46); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val lotsOfNumbers = numberList ++ moreNumbers;System.out.println("""lotsOfNumbers  : List[Int] = """ + $show(lotsOfNumbers ));$skip(52); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // More list fun
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val reversed = numberList.reverse;System.out.println("""reversed  : List[Int] = """ + $show(reversed ));$skip(29); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val sorted = reversed.sorted;System.out.println("""sorted  : List[Int] = """ + $show(sorted ));$skip(48); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val lotsOfDuplicates = numberList ++ numberList;System.out.println("""lotsOfDuplicates  : List[Int] = """ + $show(lotsOfDuplicates ));$skip(47); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val distinctValues = lotsOfDuplicates.distinct;System.out.println("""distinctValues  : List[Int] = """ + $show(distinctValues ));$skip(30); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val maxValue = numberList.max;System.out.println("""maxValue  : Int = """ + $show(maxValue ));$skip(27); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val total = numberList.sum;System.out.println("""total  : Int = """ + $show(total ));$skip(39); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val hasThree = iHateThrees.contains(3);System.out.println("""hasThree  : Boolean = """ + $show(hasThree ));$skip(223); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // Maps
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // Useful for key/value lookups on distinct keys
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // Like dictionaries in other languages
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val shipMap = Map("Kirk" -> "Enterprise", "Picard" -> "Enterprise-D", "Sisko" -> "Deep Space Nine", "Janeway" -> "Voyager");System.out.println("""shipMap  : scala.collection.immutable.Map[String,String] = """ + $show(shipMap ));$skip(28); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - println(shipMap("Janeway"));$skip(66); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // Dealing with missing keys
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - println(shipMap.contains("Archer"));$skip(67); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - val archersShip = util.Try(shipMap("Archer")) getOrElse "Unknown";System.out.println("""archersShip  : String = """ + $show(archersShip ));$skip(21); 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - println(archersShip)}
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // EXERCISE
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // Create a list of the numbers 1-20; your job is to print out numbers that are evenly divisible by three. (Scala's
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // modula operator, like other languages, is %, which gives you the remainder after division. For example, 9 % 3 = 0
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // because 9 is evenly divisible by 3.) Do this first by iterating through all the items in the list and testing each
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - // one as you go. Then, do it again by using a filter function on the list instead.
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - 
2020-05-02 12:49:50,027  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-21] - ResidentCompiler - }
2020-05-04 10:22:41,634 ERROR [Worker-3] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-04 10:22:41,638 ERROR [Worker-3] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-04 13:59:27,765  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-04 13:59:27,974  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-04 13:59:28,175  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-04 15:37:15,270  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-05 10:50:08,840 ERROR [ModalContext] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2020-05-05 10:50:08,845 ERROR [ModalContext] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-05 10:50:11,636  WARN [ModalContext] - ScalaProject - Project learnscala has platform default sourceLevel.
2020-05-05 10:50:11,636  WARN [ModalContext] - ScalaProject - Project learnscala runs on platform default installation.
2020-05-05 10:50:11,909  WARN [ModalContext] - ScalaProject - Project learnscala has platform default sourceLevel.
2020-05-05 10:50:11,910  WARN [ModalContext] - ScalaProject - Project learnscala runs on platform default installation.
2020-05-06 09:03:42,410 ERROR [main] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2020-05-06 09:03:42,413 ERROR [main] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-06 09:20:10,870  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-07 09:03:20,768 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 09:03:20,799 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 09:03:20,801 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 09:03:34,182 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 09:03:34,230 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 09:03:34,230 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 11:35:38,431 ERROR [Worker-21] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-07 11:35:38,433 ERROR [Worker-21] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-07 11:35:38,960  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-07 11:47:37,381  WARN [main] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-07 11:51:30,238 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 14:26:01,795 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 14:26:01,797 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 14:26:01,797 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 15:26:17,335  WARN [main] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-05-07 15:26:17,336  WARN [main] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-05-07 15:26:17,580  WARN [main] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-05-07 15:26:17,581  WARN [main] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-05-07 15:26:17,749  WARN [Worker-64] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-05-07 15:26:17,750  WARN [Worker-64] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-05-07 15:26:18,239  WARN [Worker-64] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-05-07 15:26:18,239  WARN [Worker-64] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-05-07 15:26:21,338  WARN [main] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-05-07 15:26:21,338  WARN [main] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-05-07 15:32:56,074 ERROR [Worker-7] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-07 15:32:56,079 ERROR [Worker-7] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-07 21:38:55,445 ERROR [Worker-4] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-07 21:38:55,448 ERROR [Worker-4] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-07 21:46:36,722 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 21:46:36,723 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 21:46:36,724 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 21:53:51,077 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 21:53:51,078 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 21:53:51,078 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:00:36,249 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:00:36,249 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:00:36,249 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:05:08,212 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:05:08,212 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:05:08,212 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:15:32,233 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:15:32,233 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:15:32,233 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:23:08,546 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:23:08,546 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:23:08,546 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:25:33,590 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:25:33,590 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:25:33,591 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:27:44,739 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:27:44,739 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:27:44,739 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:27:44,740 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:27:44,740 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:27:44,740 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:27:44,740 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:27:44,740 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 22:54:31,959  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3318
2020-05-07 22:54:31,960  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3364
2020-05-07 22:54:31,960  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3399
2020-05-07 22:54:31,960  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3442
2020-05-07 22:54:31,960  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3434
2020-05-07 22:54:31,960  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3424
2020-05-07 22:54:32,474  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3318
2020-05-07 22:54:32,474  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3364
2020-05-07 22:54:32,474  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3399
2020-05-07 22:54:32,474  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3442
2020-05-07 22:54:32,474  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3434
2020-05-07 22:54:32,474  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 3424
2020-05-07 23:44:41,286 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 23:44:41,287 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-07 23:44:41,287 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 09:35:03,793 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 09:35:03,800 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 09:35:03,800 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 09:35:03,804 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 09:35:14,041 ERROR [Worker-5] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-08 09:35:14,041 ERROR [Worker-5] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-08 10:01:20,577 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,578 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,578 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,579 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,580 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,580 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,580 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,580 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,580 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,580 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,580 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,580 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 10:01:20,582 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 12:27:30,346 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 12:27:30,347 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 12:27:30,347 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 16:37:55,760 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 16:37:55,764 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-08 16:37:55,764 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 09:52:30,488 ERROR [Worker-11] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-09 09:52:30,492 ERROR [Worker-11] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-09 14:16:56,287 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 14:16:56,289 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 14:16:56,290 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 19:37:29,191 ERROR [Worker-12] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-09 19:37:29,195 ERROR [Worker-12] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-09 19:38:37,322 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 19:38:37,323 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 19:38:37,323 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 19:39:59,891 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 19:39:59,892 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-09 19:39:59,892 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-11 09:09:34,098 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-11 09:09:34,107 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-11 09:17:05,643 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-11 09:17:05,645 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-11 09:17:05,898  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-11 14:08:12,112 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-11 14:08:12,113 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-19 19:55:06,909 ERROR [Worker-6] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-19 19:55:06,913 ERROR [Worker-6] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-20 14:17:30,199 ERROR [Worker-3] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-20 14:17:30,200 ERROR [Worker-3] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-20 14:18:12,108  WARN [main] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-05-20 14:18:12,110  WARN [main] - ScalaProject - Project projectwork runs on platform default installation.
2020-05-20 14:18:12,351  WARN [main] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-05-20 14:18:12,351  WARN [main] - ScalaProject - Project projectwork runs on platform default installation.
2020-05-20 14:18:12,524  WARN [Worker-3] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-05-20 14:18:12,525  WARN [Worker-3] - ScalaProject - Project projectwork runs on platform default installation.
2020-05-20 14:18:14,012  WARN [Worker-3] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-05-20 14:18:14,012  WARN [Worker-3] - ScalaProject - Project projectwork runs on platform default installation.
2020-05-20 14:18:15,292  WARN [main] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-05-20 14:18:15,292  WARN [main] - ScalaProject - Project projectwork runs on platform default installation.
2020-05-21 11:21:52,870  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-21 11:25:06,514 ERROR [Worker-16] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-21 11:25:06,515 ERROR [Worker-16] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-21 11:25:51,933  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-21 11:36:57,372 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 11:36:57,373 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 11:36:57,373 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 11:55:18,344  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 463
2020-05-21 11:55:18,344  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 463
2020-05-21 11:55:18,857  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 463
2020-05-21 11:55:18,858  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 463
2020-05-21 11:55:22,377  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 463
2020-05-21 11:55:22,377  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 463
2020-05-21 12:17:02,867 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 12:17:02,869 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 12:17:02,869 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 13:04:15,882 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 13:04:15,883 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 13:04:15,883 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 15:15:42,374 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 15:15:42,374 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 15:15:42,374 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 15:19:24,404 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 15:19:24,404 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 15:19:24,404 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 16:00:56,019 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 16:00:56,019 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 16:00:56,020 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 17:30:18,601 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 17:30:18,604 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-21 17:30:18,604 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 14:24:32,041 ERROR [Worker-31] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-22 14:24:32,046 ERROR [Worker-31] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-22 14:45:44,434 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 14:45:44,440 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 14:45:44,441 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 15:09:55,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 15:09:55,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 15:09:55,581 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 15:53:13,041 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 15:53:13,042 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 15:53:13,042 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-22 17:08:25,901  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-22 17:08:26,017  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-23 12:13:12,902 ERROR [Worker-4] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-05-23 12:13:12,905 ERROR [Worker-4] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-05-26 15:50:45,087 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-26 15:50:45,093 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-26 15:50:45,094 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-26 15:50:45,097 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-27 09:04:18,492 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-27 09:04:18,497 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-27 09:04:18,498 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-27 09:04:18,499 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-28 09:31:47,201 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-28 09:31:47,208 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-28 09:31:47,208 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-28 09:31:47,211 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-28 09:31:47,427  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-28 09:42:05,792 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-28 09:42:05,792 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-28 09:42:05,792 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-05-29 09:35:15,151  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-05-29 09:35:15,355  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-07-15 09:02:11,141  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-07-15 09:02:11,145  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ScalaProject - Project projectwork runs on platform default installation.
2020-07-15 09:02:12,159 ERROR [main] - org.scala-ide.sdt.core - org.scala-ide.sdt.core - org.scala-ide.sdt.core - 0 - Error thrown while initializing the presentation compiler.
Java Model Exception: Java Model Status [projectwork does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:560)
	at org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(JavaModelManager.java:2469)
	at org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo(JavaProject.java:2202)
	at org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:2224)
	at org.scalaide.core.internal.project.ClasspathManagement.jdkPaths(ClasspathManagement.scala:149)
	at org.scalaide.core.internal.project.ClasspathManagement.jdkPaths$(ClasspathManagement.scala:148)
	at org.scalaide.core.internal.project.ScalaProject.jdkPaths(ScalaProject.scala:150)
	at org.scalaide.core.internal.project.ClasspathManagement.scalaClasspath(ClasspathManagement.scala:136)
	at org.scalaide.core.internal.project.ClasspathManagement.scalaClasspath$(ClasspathManagement.scala:135)
	at org.scalaide.core.internal.project.ScalaProject.scalaClasspath(ScalaProject.scala:150)
	at org.scalaide.core.internal.project.ScalaProject.setupCompilerClasspath(ScalaProject.scala:498)
	at org.scalaide.core.internal.project.ScalaProject.initializeCompilerSettings(ScalaProject.scala:485)
	at org.scalaide.core.internal.project.ScalaProject.prepareCompilerSettings(ScalaProject.scala:438)
	at org.scalaide.core.internal.project.ScalaProject.$anonfun$presentationCompiler$1(ScalaProject.scala:162)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.liftedTree1$1(PresentationCompilerProxy.scala:154)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.create(PresentationCompilerProxy.scala:153)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.initialize(PresentationCompilerProxy.scala:118)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.obtainPc$1(PresentationCompilerProxy.scala:80)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.internal(PresentationCompilerProxy.scala:100)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.apply(PresentationCompilerProxy.scala:58)
	at org.scalaide.ui.internal.editor.outline.ScalaOutlineReconcilingStrategy.updateOutlineView(ScalaOutlineReconcilingStrategy.scala:34)
	at org.scalaide.ui.internal.editor.outline.ScalaOutlineReconcilingStrategy.initialReconcile(ScalaOutlineReconcilingStrategy.scala:27)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:119)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:95)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:174)
2020-07-15 09:02:12,168  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-07-15 09:02:12,168  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ScalaProject - Project projectwork runs on platform default installation.
2020-07-15 09:02:12,250 ERROR [main] - org.scala-ide.sdt.core - org.scala-ide.sdt.core - org.scala-ide.sdt.core - 0 - Error thrown while initializing the presentation compiler.
Java Model Exception: Java Model Status [projectwork does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:560)
	at org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(JavaModelManager.java:2469)
	at org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo(JavaProject.java:2202)
	at org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:2224)
	at org.scalaide.core.internal.project.ClasspathManagement.jdkPaths(ClasspathManagement.scala:149)
	at org.scalaide.core.internal.project.ClasspathManagement.jdkPaths$(ClasspathManagement.scala:148)
	at org.scalaide.core.internal.project.ScalaProject.jdkPaths(ScalaProject.scala:150)
	at org.scalaide.core.internal.project.ClasspathManagement.scalaClasspath(ClasspathManagement.scala:136)
	at org.scalaide.core.internal.project.ClasspathManagement.scalaClasspath$(ClasspathManagement.scala:135)
	at org.scalaide.core.internal.project.ScalaProject.scalaClasspath(ScalaProject.scala:150)
	at org.scalaide.core.internal.project.ScalaProject.setupCompilerClasspath(ScalaProject.scala:498)
	at org.scalaide.core.internal.project.ScalaProject.initializeCompilerSettings(ScalaProject.scala:485)
	at org.scalaide.core.internal.project.ScalaProject.prepareCompilerSettings(ScalaProject.scala:438)
	at org.scalaide.core.internal.project.ScalaProject.$anonfun$presentationCompiler$1(ScalaProject.scala:162)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.liftedTree1$1(PresentationCompilerProxy.scala:154)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.create(PresentationCompilerProxy.scala:153)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.initialize(PresentationCompilerProxy.scala:118)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.obtainPc$1(PresentationCompilerProxy.scala:80)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.internal(PresentationCompilerProxy.scala:100)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.apply(PresentationCompilerProxy.scala:58)
	at org.scalaide.ui.internal.editor.outline.ScalaOutlineReconcilingStrategy.updateOutlineView(ScalaOutlineReconcilingStrategy.scala:34)
	at org.scalaide.ui.internal.editor.outline.ScalaOutlineReconcilingStrategy.reconcile(ScalaOutlineReconcilingStrategy.scala:19)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
2020-07-15 09:02:18,770  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ScalaProject - Project analytics has platform default sourceLevel.
2020-07-15 09:02:18,771  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ScalaProject - Project analytics runs on platform default installation.
2020-07-15 09:02:18,782 ERROR [main] - org.scala-ide.sdt.core - org.scala-ide.sdt.core - org.scala-ide.sdt.core - 0 - Error thrown while initializing the presentation compiler.
Java Model Exception: Java Model Status [analytics does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:560)
	at org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(JavaModelManager.java:2469)
	at org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo(JavaProject.java:2202)
	at org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:2224)
	at org.scalaide.core.internal.project.ClasspathManagement.jdkPaths(ClasspathManagement.scala:149)
	at org.scalaide.core.internal.project.ClasspathManagement.jdkPaths$(ClasspathManagement.scala:148)
	at org.scalaide.core.internal.project.ScalaProject.jdkPaths(ScalaProject.scala:150)
	at org.scalaide.core.internal.project.ClasspathManagement.scalaClasspath(ClasspathManagement.scala:136)
	at org.scalaide.core.internal.project.ClasspathManagement.scalaClasspath$(ClasspathManagement.scala:135)
	at org.scalaide.core.internal.project.ScalaProject.scalaClasspath(ScalaProject.scala:150)
	at org.scalaide.core.internal.project.ScalaProject.setupCompilerClasspath(ScalaProject.scala:498)
	at org.scalaide.core.internal.project.ScalaProject.initializeCompilerSettings(ScalaProject.scala:485)
	at org.scalaide.core.internal.project.ScalaProject.prepareCompilerSettings(ScalaProject.scala:438)
	at org.scalaide.core.internal.project.ScalaProject.$anonfun$presentationCompiler$1(ScalaProject.scala:162)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.liftedTree1$1(PresentationCompilerProxy.scala:154)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.create(PresentationCompilerProxy.scala:153)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.initialize(PresentationCompilerProxy.scala:118)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.obtainPc$1(PresentationCompilerProxy.scala:80)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.internal(PresentationCompilerProxy.scala:100)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.apply(PresentationCompilerProxy.scala:58)
	at org.scalaide.ui.internal.editor.outline.ScalaOutlineReconcilingStrategy.updateOutlineView(ScalaOutlineReconcilingStrategy.scala:34)
	at org.scalaide.ui.internal.editor.outline.ScalaOutlineReconcilingStrategy.initialReconcile(ScalaOutlineReconcilingStrategy.scala:27)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:119)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:95)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:174)
2020-07-15 09:02:19,777  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ScalaProject - Project analytics has platform default sourceLevel.
2020-07-15 09:02:19,777  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ScalaProject - Project analytics runs on platform default installation.
2020-07-15 09:02:19,786 ERROR [main] - org.scala-ide.sdt.core - org.scala-ide.sdt.core - org.scala-ide.sdt.core - 0 - Error thrown while initializing the presentation compiler.
Java Model Exception: Java Model Status [analytics does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:560)
	at org.eclipse.jdt.internal.core.JavaModelManager.getPerProjectInfoCheckExistence(JavaModelManager.java:2469)
	at org.eclipse.jdt.internal.core.JavaProject.getPerProjectInfo(JavaProject.java:2202)
	at org.eclipse.jdt.internal.core.JavaProject.getRawClasspath(JavaProject.java:2224)
	at org.scalaide.core.internal.project.ClasspathManagement.jdkPaths(ClasspathManagement.scala:149)
	at org.scalaide.core.internal.project.ClasspathManagement.jdkPaths$(ClasspathManagement.scala:148)
	at org.scalaide.core.internal.project.ScalaProject.jdkPaths(ScalaProject.scala:150)
	at org.scalaide.core.internal.project.ClasspathManagement.scalaClasspath(ClasspathManagement.scala:136)
	at org.scalaide.core.internal.project.ClasspathManagement.scalaClasspath$(ClasspathManagement.scala:135)
	at org.scalaide.core.internal.project.ScalaProject.scalaClasspath(ScalaProject.scala:150)
	at org.scalaide.core.internal.project.ScalaProject.setupCompilerClasspath(ScalaProject.scala:498)
	at org.scalaide.core.internal.project.ScalaProject.initializeCompilerSettings(ScalaProject.scala:485)
	at org.scalaide.core.internal.project.ScalaProject.prepareCompilerSettings(ScalaProject.scala:438)
	at org.scalaide.core.internal.project.ScalaProject.$anonfun$presentationCompiler$1(ScalaProject.scala:162)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.liftedTree1$1(PresentationCompilerProxy.scala:154)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.create(PresentationCompilerProxy.scala:153)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.initialize(PresentationCompilerProxy.scala:118)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.obtainPc$1(PresentationCompilerProxy.scala:80)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.internal(PresentationCompilerProxy.scala:100)
	at org.scalaide.core.internal.compiler.PresentationCompilerProxy.apply(PresentationCompilerProxy.scala:58)
	at org.scalaide.ui.internal.editor.outline.ScalaOutlineReconcilingStrategy.updateOutlineView(ScalaOutlineReconcilingStrategy.scala:34)
	at org.scalaide.ui.internal.editor.outline.ScalaOutlineReconcilingStrategy.reconcile(ScalaOutlineReconcilingStrategy.scala:19)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:77)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:69)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
2020-07-15 13:52:51,147 ERROR [Worker-4] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2020-07-15 13:52:51,149 ERROR [Worker-4] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-07-15 13:53:03,371  WARN [Worker-7] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-07-15 13:53:03,372  WARN [Worker-7] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-07-15 13:53:10,177  WARN [Worker-7] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-07-15 13:53:10,177  WARN [Worker-7] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-07-15 16:52:01,791 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-07-15 16:52:01,792 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-07-15 16:52:01,792 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-08-31 15:16:56,041 ERROR [Worker-3] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-08-31 15:16:56,044 ERROR [Worker-3] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-08-31 22:38:55,994  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2020-08-31 22:41:01,824 ERROR [ModalContext] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2020-08-31 22:41:01,824 ERROR [ModalContext] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-08-31 22:41:05,086  WARN [ModalContext] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-08-31 22:41:05,086  WARN [ModalContext] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-08-31 22:41:05,228  WARN [ModalContext] - ScalaProject - Project analytics_sprk16 has platform default sourceLevel.
2020-08-31 22:41:05,228  WARN [ModalContext] - ScalaProject - Project analytics_sprk16 runs on platform default installation.
2020-08-31 22:41:36,338  WARN [ModalContext] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-08-31 22:41:36,338  WARN [ModalContext] - ScalaProject - Project projectwork runs on platform default installation.
2020-08-31 22:41:36,463  WARN [ModalContext] - ScalaProject - Project projectwork has platform default sourceLevel.
2020-08-31 22:41:36,463  WARN [ModalContext] - ScalaProject - Project projectwork runs on platform default installation.
2020-08-31 22:45:59,444  WARN [main] - ScalaProject - Project learnspark has platform default sourceLevel.
2020-08-31 22:45:59,444  WARN [main] - ScalaProject - Project learnspark runs on platform default installation.
2020-08-31 22:46:00,303  WARN [main] - ScalaProject - Project learnspark has platform default sourceLevel.
2020-08-31 22:46:00,303  WARN [main] - ScalaProject - Project learnspark runs on platform default installation.
2020-08-31 22:46:03,408  WARN [main] - ScalaProject - Project learnspark has platform default sourceLevel.
2020-08-31 22:46:03,408  WARN [main] - ScalaProject - Project learnspark runs on platform default installation.
2020-08-31 22:52:04,818  WARN [ModalContext] - ScalaProject - Project analytics has platform default sourceLevel.
2020-08-31 22:52:04,818  WARN [ModalContext] - ScalaProject - Project analytics runs on platform default installation.
2020-08-31 22:52:05,036  WARN [ModalContext] - ScalaProject - Project analytics has platform default sourceLevel.
2020-08-31 22:52:05,036  WARN [ModalContext] - ScalaProject - Project analytics runs on platform default installation.
2020-09-01 15:44:04,837 ERROR [main] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2020-09-01 15:44:04,839 ERROR [main] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-12-10 01:11:19,711 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-10 01:11:19,716 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-10 01:11:19,716 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:09:27,956 ERROR [Worker-10] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-12-22 20:09:27,959 ERROR [Worker-10] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-12-22 20:17:14,265 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:14,265 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:14,266 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:15,301 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:15,302 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:15,302 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:32,884 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:32,884 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:32,884 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:34,239 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:34,240 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 20:17:34,240 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 21:38:22,755 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 21:38:22,755 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-22 21:38:22,756 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-23 11:29:24,805 ERROR [Worker-31] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-12-23 11:29:24,807 ERROR [Worker-31] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-12-23 18:40:46,993 ERROR [Worker-4] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2020-12-23 18:40:46,995 ERROR [Worker-4] - System.err - log4j:WARN Please initialize the log4j system properly.
2020-12-23 18:41:10,039 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-23 18:41:10,041 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-23 18:41:10,045 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-23 18:41:10,045 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-23 18:41:10,045 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-23 18:41:10,046 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2020-12-23 18:41:10,053 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-01-19 23:21:53,086  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-01-19 23:21:53,293  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-01-19 23:21:53,495  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-01-27 19:32:09,148  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-01-27 19:32:09,351  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-01-27 19:32:57,880  WARN [Worker-2] - ScalaProject - Project analytics has platform default sourceLevel.
2021-01-27 19:32:57,881  WARN [Worker-2] - ScalaProject - Project analytics runs on platform default installation.
2021-01-27 19:32:57,925  WARN [Worker-2] - ScalaProject - Project analytics has platform default sourceLevel.
2021-01-27 19:32:57,925  WARN [Worker-2] - ScalaProject - Project analytics runs on platform default installation.
2021-01-27 19:32:57,933 ERROR [Worker-2] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2021-01-27 19:32:57,933 ERROR [Worker-2] - System.err - log4j:WARN Please initialize the log4j system properly.
2021-01-27 19:37:23,489 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-01-27 19:37:23,490 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-01-27 19:37:23,490 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-01-27 19:38:50,709 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-01-27 19:38:50,709 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-01-27 19:38:50,709 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-01-27 20:47:18,336  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 524
2021-01-27 20:47:18,867  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 524
2021-01-27 20:47:19,425  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 524
2021-01-27 20:47:20,960  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - TraverserImpl$ - Skipping annotation, position length = 0, position offset = 524
2021-02-10 18:40:17,391 ERROR [Worker-5] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2021-02-10 18:40:17,393 ERROR [Worker-5] - System.err - log4j:WARN Please initialize the log4j system properly.
2021-08-01 21:59:20,442 ERROR [main] - Statistics - Statistics file `C:\Users\Windows10\.scalaide\statistics` is corrupted. A new one is being created. Corrupted content was:

com.cedarsoftware.util.io.JsonIoException: error parsing JSON value
	at com.cedarsoftware.util.io.JsonReader.readObject(JsonReader.java:529)
	at com.cedarsoftware.util.io.JsonReader.jsonToJava(JsonReader.java:289)
	at com.cedarsoftware.util.io.JsonReader.jsonToJava(JsonReader.java:262)
	at org.scalaide.core.internal.statistics.Statistics.read(Statistics.scala:74)
	at org.scalaide.core.internal.statistics.Statistics.$anonfun$readStats$1(Statistics.scala:52)
	at org.scalaide.core.internal.statistics.Statistics.$anonfun$readStats$1$adapted(Statistics.scala:51)
	at org.scalaide.core.ScalaIdeDataStore$.$anonfun$validate$2(ScalaIdeDataStore.scala:59)
	at org.scalaide.util.eclipse.EclipseUtils$$anon$3.run(EclipseUtils.scala:230)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.scalaide.util.eclipse.EclipseUtils$.withSafeRunner(EclipseUtils.scala:226)
	at org.scalaide.core.ScalaIdeDataStore$.validate(ScalaIdeDataStore.scala:59)
	at org.scalaide.core.internal.statistics.Statistics.readStats(Statistics.scala:51)
	at org.scalaide.core.internal.statistics.Statistics.<init>(Statistics.scala:30)
	at org.scalaide.core.internal.ScalaPlugin.stats$lzycompute(ScalaPlugin.scala:135)
	at org.scalaide.core.internal.ScalaPlugin.stats(ScalaPlugin.scala:135)
	at org.scalaide.core.internal.ScalaPlugin.statistics(ScalaPlugin.scala:138)
	at org.scalaide.core.internal.ScalaPlugin.start(ScalaPlugin.scala:109)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:933)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:309)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:103)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:529)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:368)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:446)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:387)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:564)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.jdt.internal.ui.filters.FilterDescriptor$1.run(FilterDescriptor.java:135)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.filters.FilterDescriptor.createViewerFilter(FilterDescriptor.java:139)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup$FilterItem.getFilterInstance(CustomFiltersActionGroup.java:187)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.updateViewerFilters(CustomFiltersActionGroup.java:517)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.<init>(CustomFiltersActionGroup.java:275)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.<init>(CustomFiltersActionGroup.java:241)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.<init>(PackageExplorerActionGroup.java:149)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.makeActions(PackageExplorerPart.java:801)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl(PackageExplorerPart.java:507)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:151)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:147)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:990)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:955)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:124)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:399)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:318)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:162)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:105)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:74)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:56)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:661)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:530)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:70)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:661)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1293)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:97)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:679)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:137)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:49)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:79)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:97)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:679)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:137)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:704)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1076)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)
Caused by: com.cedarsoftware.util.io.JsonIoException: EOF reached prematurely
	at com.cedarsoftware.util.io.JsonParser.error(JsonParser.java:584)
	at com.cedarsoftware.util.io.JsonParser.readValue(JsonParser.java:278)
	at com.cedarsoftware.util.io.JsonReader.readObject(JsonReader.java:521)
	... 151 more
2021-08-01 21:59:22,911 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - Exception in thread "org.eclipse.jface.text.reconciler.MonoReconciler"
2021-08-01 21:59:23,194 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - java.util.NoSuchElementException: None.get
2021-08-01 21:59:23,208 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at scala.None$.get(Option.scala:349)
2021-08-01 21:59:23,208 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at scala.None$.get(Option.scala:347)
2021-08-01 21:59:23,208 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.worksheet.ScriptCompilationUnit.scalaProject$lzycompute(ScriptCompilationUnit.scala:32)
2021-08-01 21:59:23,208 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.worksheet.ScriptCompilationUnit.scalaProject(ScriptCompilationUnit.scala:32)
2021-08-01 21:59:23,208 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.core.compiler.InteractiveCompilationUnit.initialReconcile(InteractiveCompilationUnit.scala:163)
2021-08-01 21:59:23,208 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.core.compiler.InteractiveCompilationUnit.initialReconcile$(InteractiveCompilationUnit.scala:162)
2021-08-01 21:59:23,208 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.worksheet.ScriptCompilationUnit.initialReconcile(ScriptCompilationUnit.scala:25)
2021-08-01 21:59:23,208 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.worksheet.reconciler.ScalaReconcilingStrategy.initialReconcile(ScalaReconcilingStrategy.scala:46)
2021-08-01 21:59:23,317 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:95)
2021-08-01 21:59:23,333 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:174)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - Exception in thread "org.eclipse.jface.text.reconciler.MonoReconciler"
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - java.util.NoSuchElementException: None.get
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at scala.None$.get(Option.scala:349)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at scala.None$.get(Option.scala:347)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.worksheet.ScriptCompilationUnit.scalaProject$lzycompute(ScriptCompilationUnit.scala:32)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.worksheet.ScriptCompilationUnit.scalaProject(ScriptCompilationUnit.scala:32)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.core.compiler.InteractiveCompilationUnit.initialReconcile(InteractiveCompilationUnit.scala:163)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.core.compiler.InteractiveCompilationUnit.initialReconcile$(InteractiveCompilationUnit.scala:162)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.worksheet.ScriptCompilationUnit.initialReconcile(ScriptCompilationUnit.scala:25)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.scalaide.worksheet.reconciler.ScalaReconcilingStrategy.initialReconcile(ScalaReconcilingStrategy.scala:46)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:95)
2021-08-01 22:01:21,629 ERROR [org.eclipse.jface.text.reconciler.MonoReconciler] - System.err - at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:174)
2021-08-01 22:05:22,767 ERROR [main] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.project.registry.ProjectRegistryRefreshJob).
2021-08-01 22:05:22,767 ERROR [main] - System.err - log4j:WARN Please initialize the log4j system properly.
2021-08-01 22:07:20,451  WARN [main] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:07:20,451  WARN [main] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:07:20,732  WARN [main] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:07:20,732  WARN [main] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:07:21,169  WARN [Worker-9] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:07:21,169  WARN [Worker-9] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:07:44,909  WARN [Worker-9] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:07:44,909  WARN [Worker-9] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:07:56,158  WARN [Worker-10] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:07:56,158  WARN [Worker-10] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:07:56,815  WARN [Worker-10] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:07:56,815  WARN [Worker-10] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:14,799  WARN [ModalContext] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:14,799  WARN [ModalContext] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:14,987  WARN [Worker-12] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:14,987  WARN [Worker-12] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:15,862  WARN [Worker-12] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:15,862  WARN [Worker-12] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:17,566  WARN [Worker-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:17,582  WARN [Worker-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:18,081  WARN [Worker-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:18,081  WARN [Worker-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:33,114  WARN [ModalContext] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:33,114  WARN [ModalContext] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:33,394  WARN [Worker-10] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:33,394  WARN [Worker-10] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:33,907  WARN [Worker-10] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:33,907  WARN [Worker-10] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:35,485  WARN [Worker-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:35,485  WARN [Worker-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:08:35,985  WARN [Worker-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:08:35,985  WARN [Worker-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:09:20,769  WARN [Worker-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:09:20,769  WARN [Worker-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:09:21,354  WARN [Worker-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:09:21,354  WARN [Worker-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:09:50,964  WARN [Worker-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:09:50,964  WARN [Worker-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:09:51,557  WARN [Worker-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:09:51,557  WARN [Worker-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:09:54,213  WARN [org.eclipse.jface.text.reconciler.MonoReconciler] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:09:54,213  WARN [org.eclipse.jface.text.reconciler.MonoReconciler] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:42,979  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:42,979  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:42,979  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:42,979  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:42,996  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:42,996  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:43,089  WARN [Worker-12] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:43,089  WARN [Worker-12] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:43,684  WARN [Worker-12] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:43,684  WARN [Worker-12] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:43,838  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(135); 
2021-08-01 22:10:43,838  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-01 22:10:43,838  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val hello: String = "Holo hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2021-08-01 22:10:43,838  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-01 22:10:43,838  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,838  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-01 22:10:43,838  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // name, then the type.
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // VARIABLES are mutable
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Some other types
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // String printing tricks
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // printf style:
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -                                                   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Substituting in variables:
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -                                                  
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Using regular expressions:
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Dealing with booleans
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(z(10/5))}
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // EXERCISE
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-01 22:10:43,854  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler - }
2021-08-01 22:10:51,964  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:51,964  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:51,980  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:51,980  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:51,980  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:51,980  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:51,980  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:51,980  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:52,320  WARN [Worker-10] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:52,320  WARN [Worker-10] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(135); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val hello: String = "Holo hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // name, then the type.
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // VARIABLES are mutable
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Some other types
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // String printing tricks
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // printf style:
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -                                                   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Substituting in variables:
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -                                                  
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Using regular expressions:
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Dealing with booleans
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   println(z(10/5))}
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // EXERCISE
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-01 22:10:52,489  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ResidentCompiler - }
2021-08-01 22:10:53,130  WARN [Worker-10] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:53,130  WARN [Worker-10] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:55,020  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:55,020  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:55,020  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:55,020  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:55,020  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:55,020  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:10:55,036  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:10:55,036  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-13] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:09,813  WARN [Worker-12] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:09,813  WARN [Worker-12] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:10,019  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(135); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val hello: String = "Holo hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // name, then the type.
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // VARIABLES are mutable
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Some other types
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // String printing tricks
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // printf style:
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -                                                   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Substituting in variables:
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -                                                  
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Using regular expressions:
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Dealing with booleans
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   println(z(10/5))}
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // EXERCISE
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-01 22:11:10,063  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ResidentCompiler - }
2021-08-01 22:11:10,487  WARN [Worker-12] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:10,487  WARN [Worker-12] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:11,845  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:11,845  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:11,845  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:11,845  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:11,845  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:11,845  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:11,845  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:11,845  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-14] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:13,123  WARN [Worker-14] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:13,123  WARN [Worker-14] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:13,639  WARN [Worker-14] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:13,639  WARN [Worker-14] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:14,186  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:14,186  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:14,186  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:14,186  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:11:14,186  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:11:14,186  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:12:02,872  WARN [Worker-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:12:02,872  WARN [Worker-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:12:02,982  WARN [Worker-9] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:12:02,982  WARN [Worker-9] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:12:07,122  WARN [Worker-9] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:12:07,122  WARN [Worker-9] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:12:07,684  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:12:07,684  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:12:07,684  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:12:07,684  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:12:07,684  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:12:07,684  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:16:53,419  WARN [Worker-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:16:53,419  WARN [Worker-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:16:54,044  WARN [Worker-15] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:16:54,044  WARN [Worker-15] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:16:54,607  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:16:54,607  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:16:54,607  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:16:54,607  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:16:54,607  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:16:54,607  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-19] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:28:04,691  WARN [Worker-10] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:28:04,691  WARN [Worker-10] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:28:05,861  WARN [Worker-14] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:28:05,861  WARN [Worker-14] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:28:42,128 ERROR [OkHttp ConnectionPool] - System.err - Aug 01, 2021 10:28:42 PM okhttp3.internal.platform.Platform log
WARNING: A connection to https://repository.apache.org/ was leaked. Did you forget to close a response body? To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);
2021-08-01 22:28:42,189 ERROR [OkHttp ConnectionPool] - System.err - Aug 01, 2021 10:28:42 PM okhttp3.internal.platform.Platform log
WARNING: A connection to https://repository.jboss.org/ was leaked. Did you forget to close a response body? To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);
2021-08-01 22:28:42,470 ERROR [OkHttp ConnectionPool] - System.err - Aug 01, 2021 10:28:42 PM okhttp3.internal.platform.Platform log
WARNING: A connection to https://s3-us-west-2.amazonaws.com/ was leaked. Did you forget to close a response body? To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);
2021-08-01 22:31:20,892  WARN [main] - ScalaProject - Project ScalaSpark has platform default sourceLevel.
2021-08-01 22:31:20,892  WARN [main] - ScalaProject - Project ScalaSpark runs on platform default installation.
2021-08-01 22:31:29,613 ERROR [Worker-17] - ProjectIndexJob - org.scala.tools.eclipse.search.indexing.OccurrenceCollector$InvalidPresentationCompilerException: Couldn't get source file for src/main/scala/Training/ScalaSpark/LearningScala5.scala
2021-08-01 22:31:31,278  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:31:31,669  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:31:32,357  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:31:35,061  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:31:37,013  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:31:37,281  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:31:43,076  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:31:43,419  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:31:50,685 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:31:50,685 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:31:50,685 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:31:50,685 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:33:07,778  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:41:11,564  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:41:14,725 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:41:14,819 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:41:14,819 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:46:51,189  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-01 22:49:38,238 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:49:38,238 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-01 22:49:38,238 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 10:57:03,154 ERROR [main] - Statistics - Statistics file `C:\Users\Windows10\.scalaide\statistics` is corrupted. A new one is being created. Corrupted content was:

com.cedarsoftware.util.io.JsonIoException: error parsing JSON value
	at com.cedarsoftware.util.io.JsonReader.readObject(JsonReader.java:529)
	at com.cedarsoftware.util.io.JsonReader.jsonToJava(JsonReader.java:289)
	at com.cedarsoftware.util.io.JsonReader.jsonToJava(JsonReader.java:262)
	at org.scalaide.core.internal.statistics.Statistics.read(Statistics.scala:74)
	at org.scalaide.core.internal.statistics.Statistics.$anonfun$readStats$1(Statistics.scala:52)
	at org.scalaide.core.internal.statistics.Statistics.$anonfun$readStats$1$adapted(Statistics.scala:51)
	at org.scalaide.core.ScalaIdeDataStore$.$anonfun$validate$2(ScalaIdeDataStore.scala:59)
	at org.scalaide.util.eclipse.EclipseUtils$$anon$3.run(EclipseUtils.scala:230)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.scalaide.util.eclipse.EclipseUtils$.withSafeRunner(EclipseUtils.scala:226)
	at org.scalaide.core.ScalaIdeDataStore$.validate(ScalaIdeDataStore.scala:59)
	at org.scalaide.core.internal.statistics.Statistics.readStats(Statistics.scala:51)
	at org.scalaide.core.internal.statistics.Statistics.<init>(Statistics.scala:30)
	at org.scalaide.core.internal.ScalaPlugin.stats$lzycompute(ScalaPlugin.scala:135)
	at org.scalaide.core.internal.ScalaPlugin.stats(ScalaPlugin.scala:135)
	at org.scalaide.core.internal.ScalaPlugin.statistics(ScalaPlugin.scala:138)
	at org.scalaide.core.internal.ScalaPlugin.start(ScalaPlugin.scala:109)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:933)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:309)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:103)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:529)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:368)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:446)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:387)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:564)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.jdt.internal.ui.filters.FilterDescriptor$1.run(FilterDescriptor.java:135)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.filters.FilterDescriptor.createViewerFilter(FilterDescriptor.java:139)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup$FilterItem.getFilterInstance(CustomFiltersActionGroup.java:187)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.updateViewerFilters(CustomFiltersActionGroup.java:517)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.<init>(CustomFiltersActionGroup.java:275)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.<init>(CustomFiltersActionGroup.java:241)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.<init>(PackageExplorerActionGroup.java:149)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.makeActions(PackageExplorerPart.java:801)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl(PackageExplorerPart.java:507)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:151)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:147)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:990)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:955)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:124)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:399)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:318)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:162)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:105)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:74)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:56)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:661)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:530)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:70)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:661)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1293)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:97)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:679)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:137)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:49)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:79)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:97)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:679)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:137)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:704)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1076)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)
Caused by: com.cedarsoftware.util.io.JsonIoException: EOF reached prematurely
	at com.cedarsoftware.util.io.JsonParser.error(JsonParser.java:584)
	at com.cedarsoftware.util.io.JsonParser.readValue(JsonParser.java:278)
	at com.cedarsoftware.util.io.JsonReader.readObject(JsonReader.java:521)
	... 151 more
2021-08-02 10:57:52,593  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-02 10:57:52,808 ERROR [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - An exception was thrown while waiting for `askLoadedTyped` during semantic highlighting.
scala.tools.nsc.interactive.MissingResponse: response missing
	at scala.tools.nsc.interactive.Global.$anonfun$checkNoOutstanding$3(Global.scala:231)
	at scala.tools.nsc.interactive.Global.$anonfun$checkNoOutstanding$3$adapted(Global.scala:229)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:95)
	at scala.tools.nsc.interactive.Global.$anonfun$checkNoOutstanding$2(Global.scala:229)
	at scala.tools.nsc.interactive.Global.$anonfun$checkNoOutstanding$2$adapted(Global.scala:229)
	at scala.collection.TraversableLike$WithFilter.$anonfun$foreach$1(TraversableLike.scala:789)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:788)
	at scala.tools.nsc.interactive.Global.checkNoOutstanding(Global.scala:229)
	at scala.tools.nsc.interactive.Global.checkNoResponsesOutstanding(Global.scala:235)
	at scala.tools.nsc.interactive.PresentationCompilerThread.run(PresentationCompilerThread.scala:20)
2021-08-02 12:31:34,892 ERROR [Worker-31] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2021-08-02 12:31:34,916 ERROR [Worker-31] - System.err - log4j:WARN Please initialize the log4j system properly.
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val hello: String = "Hi hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // name, then the type.
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VARIABLES are mutable
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-02 12:31:36,859  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Some other types
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // String printing tricks
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // printf style:
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                   
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting in variables:
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                  
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Using regular expressions:
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Dealing with booleans
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-02 12:31:36,863  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(z(10/5))}
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // EXERCISE
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-02 12:31:36,864  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - }
2021-08-02 12:32:06,037 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 12:32:06,038 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 12:32:06,042 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 12:32:06,453  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2021-08-02 12:32:06,453  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-02 12:32:06,453  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val hello: String = "Hi hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // name, then the type.
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VARIABLES are mutable
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-02 12:32:06,456  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Some other types
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // String printing tricks
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // printf style:
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                   
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting in variables:
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                  
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Using regular expressions:
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Dealing with booleans
2021-08-02 12:32:06,458  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-02 12:32:06,459  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-02 12:32:06,459  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-02 12:32:06,459  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-02 12:32:06,459  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(z(10/5))}
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // EXERCISE
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-02 12:32:06,460  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - }
2021-08-02 12:32:11,928  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2021-08-02 12:32:11,928  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-02 12:32:11,928  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val hello: String = "Hi hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(17); 
2021-08-02 12:32:11,928  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-02 12:32:11,928  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // name, then the type.
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // VARIABLES are mutable
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Some other types
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // String printing tricks
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // printf style:
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                   
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting in variables:
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -                                                  
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Using regular expressions:
2021-08-02 12:32:11,929  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-02 12:32:11,930  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-02 12:32:11,931  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-02 12:32:11,931  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-02 12:32:11,931  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Dealing with booleans
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   println(z(10/5))}
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // EXERCISE
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-02 12:32:11,932  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-7] - ResidentCompiler - }
2021-08-02 12:46:38,889  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2021-08-02 12:46:38,914  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-02 12:46:38,914  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val hello: String = "Hi hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(32); val res$0 = 
2021-08-02 12:46:38,914  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   hello = hello + "should work";System.out.println("""res0: <error> = """ + $show(res$0));$skip(17); 
2021-08-02 12:46:38,914  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-02 12:46:38,914  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,914  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // name, then the type.
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // VARIABLES are mutable
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Some other types
2021-08-02 12:46:38,915  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // String printing tricks
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // printf style:
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -                                                   
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Substituting in variables:
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-02 12:46:38,916  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -                                                  
2021-08-02 12:46:38,918  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Using regular expressions:
2021-08-02 12:46:38,918  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-02 12:46:38,918  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-02 12:46:38,918  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-02 12:46:38,919  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-02 12:46:38,919  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Dealing with booleans
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   println(z(10/5))}
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // EXERCISE
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-02 12:46:38,934  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-17] - ResidentCompiler - }
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val hello: String = "Hi hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(51); 
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   //hello = hello + "should work"
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // name, then the type.
2021-08-02 12:47:04,363  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // VARIABLES are mutable
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Some other types
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-02 12:47:04,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-02 12:47:04,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-02 12:47:04,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-02 12:47:04,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-02 12:47:04,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-02 12:47:04,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-02 12:47:04,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // String printing tricks
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // printf style:
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -                                                   
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Substituting in variables:
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -                                                  
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Using regular expressions:
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Dealing with booleans
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   println(z(10/5))}
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // EXERCISE
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-02 12:47:04,368  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-02 12:47:04,369  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-16] - ResidentCompiler - }
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val hello: String = "Hi hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(51); 
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   //hello = hello + "should work"
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // name, then the type.
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // VARIABLES are mutable
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-02 12:54:55,310  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Some other types
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // String printing tricks
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // printf style:
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -                                                   
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Substituting in variables:
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -                                                  
2021-08-02 12:54:55,311  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Using regular expressions:
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Dealing with booleans
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(z(10/5))}
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // EXERCISE
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-02 12:54:55,313  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler - }
2021-08-02 12:55:00,556 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 12:55:00,566 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 12:55:00,566 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler - object LearningScala1 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(133); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // VALUES are immutable constants. You can't change them once defined.
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val hello: String = "Hi hello OK!";System.out.println("""hello  : String = """ + $show(hello ));$skip(51); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   //hello = hello + "should work"
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(hello);$skip(178); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Notice how Scala defines things backwards from other languages - you declare the
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // name, then the type.
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // VARIABLES are mutable
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   var helloThere: String = hello;System.out.println("""helloThere  : String = """ + $show(helloThere ));$skip(33); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   helloThere = hello + " There!";$skip(22); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(helloThere);$skip(302); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // One key objective of functional programming is to use immutable objects as often as possible.
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Try to use operations that transform immutable objects into a new immutable object.
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // For example, we could have done the same thing like this:
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val immutableHelloThere = hello + "There!";System.out.println("""immutableHelloThere  : String = """ + $show(immutableHelloThere ));$skip(31); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(immutableHelloThere);$skip(51); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Some other types
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val numberOne : Int = 1;System.out.println("""numberOne  : Int = """ + $show(numberOne ));$skip(29); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val truth : Boolean = true;System.out.println("""truth  : Boolean = """ + $show(truth ));$skip(27); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val letterA : Char = 'a';System.out.println("""letterA  : Char = """ + $show(letterA ));$skip(31); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val pi : Double = 3.14159265;System.out.println("""pi  : Double = """ + $show(pi ));$skip(46); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val piSinglePrecision : Float = 3.14159265f;System.out.println("""piSinglePrecision  : Float = """ + $show(piSinglePrecision ));$skip(37); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val bigNumber : Long = 1234567890l;System.out.println("""bigNumber  : Long = """ + $show(bigNumber ));$skip(31); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val smallNumber : Byte = 127;System.out.println("""smallNumber  : Byte = """ + $show(smallNumber ));$skip(141); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // String printing tricks
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Concatenating stuff with +:
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println("Here is a mess: " + numberOne + truth + letterA + pi + bigNumber);$skip(71); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // printf style:
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(f"Pi is about $piSinglePrecision%.3f");$skip(55); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(f"Zero padding on the left: $numberOne%05d");$skip(169); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -                                                   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Substituting in variables:
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(s"I can use the s prefix to use variables like $numberOne $truth $letterA");$skip(150); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Substituting expressions (with curly brackets):
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(s"The s prefix isn't limited to variables; I can include any expression. Like ${1+2}");$skip(163); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -                                                  
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Using regular expressions:
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val theUltimateAnswer: String = "To life, the universe, and everything is 42.";System.out.println("""theUltimateAnswer  : String = """ + $show(theUltimateAnswer ));$skip(37); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val pattern = """.* ([\d]+).*""".r;System.out.println("""pattern  : scala.util.matching.Regex = """ + $show(pattern ));$skip(48); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val pattern(answerString) = theUltimateAnswer;System.out.println("""answerString  : String = """ + $show(answerString ));$skip(34); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val answer = answerString.toInt;System.out.println("""answer  : Int = """ + $show(answer ));$skip(18); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(answer);$skip(54); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Dealing with booleans
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val isGreater = 1 > 2;System.out.println("""isGreater  : Boolean = """ + $show(isGreater ));$skip(23); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val isLesser = 1 < 2;System.out.println("""isLesser  : Boolean = """ + $show(isLesser ));$skip(40); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val impossible = isGreater & isLesser;System.out.println("""impossible  : Boolean = """ + $show(impossible ));$skip(41); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val anotherWay = isGreater && isLesser;System.out.println("""anotherWay  : Boolean = """ + $show(anotherWay ));$skip(35); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val picard: String = "Picard";System.out.println("""picard  : String = """ + $show(picard ));$skip(37); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val bestCaptain: String = "Picard";System.out.println("""bestCaptain  : String = """ + $show(bestCaptain ));$skip(46); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   val isBest: Boolean = picard == bestCaptain;System.out.println("""isBest  : Boolean = """ + $show(isBest ));$skip(34); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   var z = new Array[String](3);System.out.println("""z  : Array[String] = """ + $show(z ));$skip(47); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   z(0) = "car"; z(1) = "bus"; z(4/2) = "train";$skip(19); 
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   println(z(10/5))}
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // EXERCISE
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // Write some code that takes the value of pi, doubles it, and then prints it within a string with
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler -   // three decimal places of precision to the right.
2021-08-02 12:55:05,418  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-23] - ResidentCompiler - }
2021-08-02 13:39:18,240 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 13:39:18,244 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 13:39:18,244 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 13:39:18,244 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 14:05:04,369  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - object LearningScala2 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(141); 
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   // Flow control
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   // If / else syntax
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   if (1 > 3) println("Impossible!") else println("The world makes sense.");$skip(122); 
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   if (1 > 3) {
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	println("Impossible!")
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	println("Impossible!")
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   } else {
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	println("The world makes sense.")
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   };$skip(68); 
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   // Matching - like switch in other languages:
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   val number = 3;System.out.println("""number  : Int = """ + $show(number ));$skip(146); 
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   number match {
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	case 1 => println("One")
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	case 2 => println("Two")
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	case 3 => println("Three")
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	case _ => println("Something else")
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -  	};$skip(99); 
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -  	
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -  	// For loops
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -  	//var sum
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -  	for (x <- 1 to 4) {
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -  		val squared = x * x
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -  		println(squared)
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -  	};$skip(81); 
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -                                                   
2021-08-02 14:05:04,370  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   // While loops
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   var x = 10;System.out.println("""x  : Int = """ + $show(x ));$skip(47); 
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   while (x >= 0) {
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	println(x)
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   	x -= 1
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   };$skip(59); 
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -                                                   
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   x = 0;$skip(42); 
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -   do { println(x); x+=1 } while (x <= 10);$skip(154); val res$0 = 
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -                                                   
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -    // Expressions
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -    // "Returns" the final value in a block automatically
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -    
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -    {val x = 10; x + 20};System.out.println("""res0: Int = """ + $show(res$0));$skip(81); 
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler -                                                 
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - 	 println({val x = 10; x + 20})}
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - 	 
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - 	 // EXERCISE
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - 	 // Write some code that prints out the first 10 values of the Fibonacci sequence.
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - 	 // This is the sequence where every number is the sum of the two numbers before it.
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - 	 // So, the result should be 0, 1, 1, 2, 3, 5, 8, 13, 21, 34
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - 	 
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - 	   
2021-08-02 14:05:04,372  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-29] - ResidentCompiler - }
2021-08-02 14:41:17,022  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - object LearningScala2 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(141); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   // Flow control
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   // If / else syntax
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   if (1 > 3) println("Impossible!") else println("The world makes sense.");$skip(122); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   if (1 > 3) {
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	println("Impossible!")
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	println("Impossible!")
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   } else {
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	println("The world makes sense.")
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   };$skip(68); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   // Matching - like switch in other languages:
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   val number = 3;System.out.println("""number  : Int = """ + $show(number ));$skip(146); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   number match {
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	case 1 => println("One")
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	case 2 => println("Two")
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	case 3 => println("Three")
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	case _ => println("Something else")
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -  	};$skip(99); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -  	
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -  	// For loops
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -  	//var sum
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -  	for (x <- 1 to 4) {
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -  		val squared = x * x
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -  		println(squared)
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -  	};$skip(81); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -                                                   
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   // While loops
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   var x = 10;System.out.println("""x  : Int = """ + $show(x ));$skip(47); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   while (x >= 0) {
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	println(x)
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   	x -= 1
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   };$skip(59); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -                                                   
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   x = 0;$skip(42); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -   do { println(x); x+=1 } while (x <= 10);$skip(154); val res$0 = 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -                                                   
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -    // Expressions
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -    // "Returns" the final value in a block automatically
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -    
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -    {val x = 10; x + 20};System.out.println("""res0: Int = """ + $show(res$0));$skip(81); 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler -                                                 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - 	 println({val x = 10; x + 20})}
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - 	 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - 	 // EXERCISE
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - 	 // Write some code that prints out the first 10 values of the Fibonacci sequence.
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - 	 // This is the sequence where every number is the sum of the two numbers before it.
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - 	 // So, the result should be 0, 1, 1, 2, 3, 5, 8, 13, 21, 34
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - 	 
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - 	   
2021-08-02 14:41:17,024  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-32] - ResidentCompiler - }
2021-08-02 14:41:22,991  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - object LearningScala2 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(141); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   // Flow control
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   // If / else syntax
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   if (1 > 3) println("Impossible!") else println("The world makes sense.");$skip(122); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   if (1 > 3) {
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	println("Impossible!")
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	println("Impossible!")
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   } else {
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	println("The world makes sense.")
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   };$skip(68); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   // Matching - like switch in other languages:
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   val number = 3;System.out.println("""number  : Int = """ + $show(number ));$skip(146); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   number match {
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	case 1 => println("One")
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	case 2 => println("Two")
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	case 3 => println("Three")
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	case _ => println("Something else")
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -  	};$skip(99); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -  	
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -  	// For loops
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -  	//var sum
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -  	for (x <- 1 to 4) {
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -  		val squared = x * x
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -  		println(squared)
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -  	};$skip(81); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -                                                   
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   // While loops
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   var x = 10;System.out.println("""x  : Int = """ + $show(x ));$skip(47); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   while (x >= 0) {
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	println(x)
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   	x -= 1
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   };$skip(59); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -                                                   
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   x = 0;$skip(42); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -   do { println(x); x+=1 } while (x <= 10);$skip(154); val res$0 = 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -                                                   
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -    // Expressions
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -    // "Returns" the final value in a block automatically
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -    
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -    {val x = 10; x + 20};System.out.println("""res0: Int = """ + $show(res$0));$skip(81); 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler -                                                 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - 	 println({val x = 10; x + 20})}
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - 	 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - 	 // EXERCISE
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - 	 // Write some code that prints out the first 10 values of the Fibonacci sequence.
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - 	 // This is the sequence where every number is the sum of the two numbers before it.
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - 	 // So, the result should be 0, 1, 1, 2, 3, 5, 8, 13, 21, 34
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - 	 
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - 	   
2021-08-02 14:41:22,992  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-33] - ResidentCompiler - }
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - object LearningScala4 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(304); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   // Data structures
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   // Tuples (Also really common with Spark!!)
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   // Immutable lists
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   // Often thought of as database fields, or columns.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   // Useful for passing around entire rows of data.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   val captainStuff = ("Picard", "Enterprise-D", "NCC-1701-D", ("crew1","crew2"));System.out.println("""captainStuff  : (String, String, String, (String, String)) = """ + $show(captainStuff ));$skip(24); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   println(captainStuff);$skip(94); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   // You refer to individual fields with their ONE-BASED index:
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   println(captainStuff._1);$skip(27); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   println(captainStuff._2);$skip(27); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -   println(captainStuff._3);$skip(92); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // You can create a key/value pair with ->
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  val picardsShip = "Picard" -> "Enterprise-D";System.out.println("""picardsShip  : (String, String) = """ + $show(picardsShip ));$skip(25); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  println(picardsShip._2);$skip(87); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // You can mix different types in a tuple
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  val aBunchOfStuff = ("Kirk", 1964, true);System.out.println("""aBunchOfStuff  : (String, Int, Boolean) = """ + $show(aBunchOfStuff ));$skip(275); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // Lists
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // Like a tuple, but it's an actual Collection object that has more functionality.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // Also, it cannot hold items of different types.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // It's a singly-linked list under the hood.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  val shipList = List("Enterprise", "Defiant", "Voyager", "Deep Space Nine");System.out.println("""shipList  : List[String] = """ + $show(shipList ));$skip(101); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // Access individual members using () with ZERO-BASED index (confused yet?)
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  println(shipList(1));$skip(93); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // head and tail give you the first item, and the remaining ones.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  println(shipList.head);$skip(24); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  println(shipList.tail);$skip(72); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // Iterating though a list
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  for (ship <- shipList) {println(ship)};$skip(187); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  // Let's apply a function literal to a list! map() can be used to apply any function to every item in a collection.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val backwardShips = shipList.map( (ship: String) => {ship.reverse});System.out.println("""backwardShips  : List[String] = """ + $show(backwardShips ));$skip(45); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -  for (ship <- backwardShips) {println(ship)};$skip(183); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler -                                                   
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // reduce() can be used to combine together all the items in a collection using some function.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val numberList = List(1, 2, 3, 4, 5);System.out.println("""numberList  : List[Int] = """ + $show(numberList ));$skip(56); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val sum = numberList.reduce( (x: Int, y: Int) => x + y);System.out.println("""sum  : Int = """ + $show(sum ));$skip(13); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - println(sum);$skip(158); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // filter() can remove stuff you don't want. Here we'll introduce wildcard syntax while we're at it.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val iHateFives = numberList.filter( (x: Int) => x != 5);System.out.println("""iHateFives  : List[Int] = """ + $show(iHateFives ));$skip(44); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val iHateThrees = numberList.filter(_ != 3);System.out.println("""iHateThrees  : List[Int] = """ + $show(iHateThrees ));$skip(229); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // Note that Spark has its own map, reduce, and filter functions that can distribute these operations. But they work the same way!
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // Also, you understand MapReduce now :)
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // Concatenating lists
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val moreNumbers = List(6, 7, 8);System.out.println("""moreNumbers  : List[Int] = """ + $show(moreNumbers ));$skip(46); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val lotsOfNumbers = numberList ++ moreNumbers;System.out.println("""lotsOfNumbers  : List[Int] = """ + $show(lotsOfNumbers ));$skip(52); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // More list fun
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val reversed = numberList.reverse;System.out.println("""reversed  : List[Int] = """ + $show(reversed ));$skip(29); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val sorted = reversed.sorted;System.out.println("""sorted  : List[Int] = """ + $show(sorted ));$skip(48); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val lotsOfDuplicates = numberList ++ numberList;System.out.println("""lotsOfDuplicates  : List[Int] = """ + $show(lotsOfDuplicates ));$skip(47); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val distinctValues = lotsOfDuplicates.distinct;System.out.println("""distinctValues  : List[Int] = """ + $show(distinctValues ));$skip(30); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val maxValue = numberList.max;System.out.println("""maxValue  : Int = """ + $show(maxValue ));$skip(27); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val total = numberList.sum;System.out.println("""total  : Int = """ + $show(total ));$skip(39); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val hasThree = iHateThrees.contains(3);System.out.println("""hasThree  : Boolean = """ + $show(hasThree ));$skip(223); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // Maps
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // Useful for key/value lookups on distinct keys
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // Like dictionaries in other languages
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val shipMap = Map("Kirk" -> "Enterprise", "Picard" -> "Enterprise-D", "Sisko" -> "Deep Space Nine", "Janeway" -> "Voyager");System.out.println("""shipMap  : scala.collection.immutable.Map[String,String] = """ + $show(shipMap ));$skip(28); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - println(shipMap("Janeway"));$skip(66); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // Dealing with missing keys
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - println(shipMap.contains("Archer"));$skip(67); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - val archersShip = util.Try(shipMap("Archer")) getOrElse "Unknown";System.out.println("""archersShip  : String = """ + $show(archersShip ));$skip(21); 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - println(archersShip)}
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // EXERCISE
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // Create a list of the numbers 1-20; your job is to print out numbers that are evenly divisible by three. (Scala's
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // modula operator, like other languages, is %, which gives you the remainder after division. For example, 9 % 3 = 0
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // because 9 is evenly divisible by 3.) Do this first by iterating through all the items in the list and testing each
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - // one as you go. Then, do it again by using a filter function on the list instead.
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - 
2021-08-02 14:46:21,650  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-35] - ResidentCompiler - }
2021-08-02 14:46:27,180 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 14:46:27,180 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 14:46:27,182 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 14:47:05,050 ERROR [main] - org.scala-ide.sdt.core - org.scala-ide.sdt.core - org.scala-ide.sdt.core - 0 - Error during instrumentation of ScriptCompilationUnit(L/ScalaSpark/src/main/scala/Training/ScalaSpark/LearningScala4.sc)
org.scalaide.worksheet.runtime.ProgramInstrumentationFailed: Error during askInstrumented of unit LearningScala4.sc
	at org.scalaide.worksheet.runtime.SourceInstrumenter.instrumentProgram(SourceInstrumenter.scala:41)
	at org.scalaide.worksheet.runtime.SourceInstrumenter.instrument(SourceInstrumenter.scala:24)
	at org.scalaide.worksheet.runtime.WorksheetRunner$$anonfun$receive$1.applyOrElse(WorksheetRunner.scala:85)
	at akka.actor.Actor.aroundReceive(Actor.scala:497)
	at akka.actor.Actor.aroundReceive$(Actor.scala:495)
	at org.scalaide.worksheet.runtime.WorksheetRunner.aroundReceive(WorksheetRunner.scala:48)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526)
	at akka.actor.ActorCell.invoke(ActorCell.scala:495)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
	at akka.dispatch.Mailbox.run(Mailbox.scala:224)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
	at java.util.concurrent.ForkJoinTask.doExec(Unknown Source)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(Unknown Source)
	at java.util.concurrent.ForkJoinPool.runWorker(Unknown Source)
	at java.util.concurrent.ForkJoinWorkerThread.run(Unknown Source)
Caused by: java.lang.ArrayIndexOutOfBoundsException
	at scala.Array$.copy(Array.scala:104)
	at scala.tools.nsc.interactive.ScratchPadMaker2$Patcher.$anonfun$result$3(ScratchPadMaker2.scala:148)
	at scala.tools.nsc.interactive.ScratchPadMaker2$Patcher.$anonfun$result$3$adapted(ScratchPadMaker2.scala:145)
	at scala.collection.TraversableLike$WithFilter.$anonfun$foreach$1(TraversableLike.scala:789)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:59)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:52)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:788)
	at scala.tools.nsc.interactive.ScratchPadMaker2$Patcher.result(ScratchPadMaker2.scala:145)
	at scala.tools.nsc.interactive.ProgramInstrumenter$Instrumenter$.instrumentation(ProgramInstrumenter.scala:35)
	at scala.tools.nsc.interactive.ProgramInstrumenter$Instrumenter$.$anonfun$askInstrumentation$1(ProgramInstrumenter.scala:15)
	at scala.tools.nsc.interactive.Global.$anonfun$respond$1(Global.scala:688)
	at scala.tools.nsc.interactive.Global.respondGradually(Global.scala:695)
	at scala.tools.nsc.interactive.Global.respond(Global.scala:688)
	at scala.tools.nsc.interactive.ProgramInstrumenter$Instrumenter$.askInstrumentation(ProgramInstrumenter.scala:15)
	at scala.tools.nsc.interactive.ProgramInstrumenter.$anonfun$askInstrumented$2(ProgramInstrumenter.scala:52)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.tools.nsc.util.InterruptReq.execute(InterruptReq.scala:26)
	at scala.tools.nsc.interactive.Global.$anonfun$pollForWork$1(Global.scala:444)
	at scala.tools.nsc.interactive.Global.pollForWork(Global.scala:418)
	at scala.tools.nsc.interactive.PresentationCompilerThread.run(PresentationCompilerThread.scala:22)
2021-08-02 14:47:47,364  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - object LearningScala4 {;import org.scalaide.worksheet.runtime.library.WorksheetSupport._; def main(args: Array[String])=$execute{;$skip(304); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   // Data structures
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   // Tuples (Also really common with Spark!!)
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   // Immutable lists
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   // Often thought of as database fields, or columns.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   // Useful for passing around entire rows of data.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   val captainStuff = ("Picard", "Enterprise-D", "NCC-1701-D", ("crew1","crew2"));System.out.println("""captainStuff  : (String, String, String, (String, String)) = """ + $show(captainStuff ));$skip(24); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   println(captainStuff);$skip(94); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   // You refer to individual fields with their ONE-BASED index:
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   println(captainStuff._1);$skip(27); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   println(captainStuff._2);$skip(27); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   println(captainStuff._3);$skip(30); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -   println(captainStuff._4._2);$skip(90); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // You can create a key/value pair with ->
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  val picardsShip = "Picard" -> "Enterprise-D";System.out.println("""picardsShip  : (String, String) = """ + $show(picardsShip ));$skip(25); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  println(picardsShip._2);$skip(87); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // You can mix different types in a tuple
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  val aBunchOfStuff = ("Kirk", 1964, true);System.out.println("""aBunchOfStuff  : (String, Int, Boolean) = """ + $show(aBunchOfStuff ));$skip(275); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // Lists
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // Like a tuple, but it's an actual Collection object that has more functionality.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // Also, it cannot hold items of different types.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // It's a singly-linked list under the hood.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  val shipList = List("Enterprise", "Defiant", "Voyager", "Deep Space Nine");System.out.println("""shipList  : List[String] = """ + $show(shipList ));$skip(101); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // Access individual members using () with ZERO-BASED index (confused yet?)
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  println(shipList(1));$skip(93); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // head and tail give you the first item, and the remaining ones.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  println(shipList.head);$skip(24); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  println(shipList.tail);$skip(72); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // Iterating though a list
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  for (ship <- shipList) {println(ship)};$skip(187); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  // Let's apply a function literal to a list! map() can be used to apply any function to every item in a collection.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val backwardShips = shipList.map( (ship: String) => {ship.reverse});System.out.println("""backwardShips  : List[String] = """ + $show(backwardShips ));$skip(45); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -  for (ship <- backwardShips) {println(ship)};$skip(183); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler -                                                   
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // reduce() can be used to combine together all the items in a collection using some function.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val numberList = List(1, 2, 3, 4, 5);System.out.println("""numberList  : List[Int] = """ + $show(numberList ));$skip(56); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val sum = numberList.reduce( (x: Int, y: Int) => x + y);System.out.println("""sum  : Int = """ + $show(sum ));$skip(13); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - println(sum);$skip(158); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // filter() can remove stuff you don't want. Here we'll introduce wildcard syntax while we're at it.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val iHateFives = numberList.filter( (x: Int) => x != 5);System.out.println("""iHateFives  : List[Int] = """ + $show(iHateFives ));$skip(44); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val iHateThrees = numberList.filter(_ != 3);System.out.println("""iHateThrees  : List[Int] = """ + $show(iHateThrees ));$skip(229); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // Note that Spark has its own map, reduce, and filter functions that can distribute these operations. But they work the same way!
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // Also, you understand MapReduce now :)
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // Concatenating lists
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val moreNumbers = List(6, 7, 8);System.out.println("""moreNumbers  : List[Int] = """ + $show(moreNumbers ));$skip(46); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val lotsOfNumbers = numberList ++ moreNumbers;System.out.println("""lotsOfNumbers  : List[Int] = """ + $show(lotsOfNumbers ));$skip(52); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // More list fun
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val reversed = numberList.reverse;System.out.println("""reversed  : List[Int] = """ + $show(reversed ));$skip(29); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val sorted = reversed.sorted;System.out.println("""sorted  : List[Int] = """ + $show(sorted ));$skip(48); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val lotsOfDuplicates = numberList ++ numberList;System.out.println("""lotsOfDuplicates  : List[Int] = """ + $show(lotsOfDuplicates ));$skip(47); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val distinctValues = lotsOfDuplicates.distinct;System.out.println("""distinctValues  : List[Int] = """ + $show(distinctValues ));$skip(30); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val maxValue = numberList.max;System.out.println("""maxValue  : Int = """ + $show(maxValue ));$skip(27); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val total = numberList.sum;System.out.println("""total  : Int = """ + $show(total ));$skip(39); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val hasThree = iHateThrees.contains(3);System.out.println("""hasThree  : Boolean = """ + $show(hasThree ));$skip(223); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // Maps
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // Useful for key/value lookups on distinct keys
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // Like dictionaries in other languages
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val shipMap = Map("Kirk" -> "Enterprise", "Picard" -> "Enterprise-D", "Sisko" -> "Deep Space Nine", "Janeway" -> "Voyager");System.out.println("""shipMap  : scala.collection.immutable.Map[String,String] = """ + $show(shipMap ));$skip(28); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - println(shipMap("Janeway"));$skip(66); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // Dealing with missing keys
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - println(shipMap.contains("Archer"));$skip(67); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - val archersShip = util.Try(shipMap("Archer")) getOrElse "Unknown";System.out.println("""archersShip  : String = """ + $show(archersShip ));$skip(21); 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - println(archersShip)}
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // EXERCISE
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // Create a list of the numbers 1-20; your job is to print out numbers that are evenly divisible by three. (Scala's
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // modula operator, like other languages, is %, which gives you the remainder after division. For example, 9 % 3 = 0
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // because 9 is evenly divisible by 3.) Do this first by iterating through all the items in the list and testing each
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - // one as you go. Then, do it again by using a filter function on the list instead.
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - 
2021-08-02 14:47:47,365  WARN [bundle-364-ActorSystem-akka.actor.default-dispatcher-42] - ResidentCompiler - }
2021-08-02 14:47:52,404 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 14:47:52,404 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 14:47:52,404 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 16:46:09,134 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-02 16:46:09,134 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-03 09:00:57,931 ERROR [main] - Statistics - Statistics file `C:\Users\Windows10\.scalaide\statistics` is corrupted. A new one is being created. Corrupted content was:

com.cedarsoftware.util.io.JsonIoException: error parsing JSON value
	at com.cedarsoftware.util.io.JsonReader.readObject(JsonReader.java:529)
	at com.cedarsoftware.util.io.JsonReader.jsonToJava(JsonReader.java:289)
	at com.cedarsoftware.util.io.JsonReader.jsonToJava(JsonReader.java:262)
	at org.scalaide.core.internal.statistics.Statistics.read(Statistics.scala:74)
	at org.scalaide.core.internal.statistics.Statistics.$anonfun$readStats$1(Statistics.scala:52)
	at org.scalaide.core.internal.statistics.Statistics.$anonfun$readStats$1$adapted(Statistics.scala:51)
	at org.scalaide.core.ScalaIdeDataStore$.$anonfun$validate$2(ScalaIdeDataStore.scala:59)
	at org.scalaide.util.eclipse.EclipseUtils$$anon$3.run(EclipseUtils.scala:230)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.scalaide.util.eclipse.EclipseUtils$.withSafeRunner(EclipseUtils.scala:226)
	at org.scalaide.core.ScalaIdeDataStore$.validate(ScalaIdeDataStore.scala:59)
	at org.scalaide.core.internal.statistics.Statistics.readStats(Statistics.scala:51)
	at org.scalaide.core.internal.statistics.Statistics.<init>(Statistics.scala:30)
	at org.scalaide.core.internal.ScalaPlugin.stats$lzycompute(ScalaPlugin.scala:135)
	at org.scalaide.core.internal.ScalaPlugin.stats(ScalaPlugin.scala:135)
	at org.scalaide.core.internal.ScalaPlugin.statistics(ScalaPlugin.scala:138)
	at org.scalaide.core.internal.ScalaPlugin.start(ScalaPlugin.scala:109)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:933)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:309)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:103)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:529)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:368)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:446)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:387)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:564)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.jdt.internal.ui.filters.FilterDescriptor$1.run(FilterDescriptor.java:135)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.filters.FilterDescriptor.createViewerFilter(FilterDescriptor.java:139)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup$FilterItem.getFilterInstance(CustomFiltersActionGroup.java:187)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.updateViewerFilters(CustomFiltersActionGroup.java:517)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.<init>(CustomFiltersActionGroup.java:275)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.<init>(CustomFiltersActionGroup.java:241)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.<init>(PackageExplorerActionGroup.java:149)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.makeActions(PackageExplorerPart.java:801)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl(PackageExplorerPart.java:507)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:151)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:147)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:990)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:955)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:124)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:399)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:318)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:162)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:105)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:74)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:56)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:661)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:530)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:70)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:661)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1293)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:97)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:679)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:137)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:49)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:79)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:97)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:679)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:137)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:704)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1076)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)
Caused by: com.cedarsoftware.util.io.JsonIoException: EOF reached prematurely
	at com.cedarsoftware.util.io.JsonParser.error(JsonParser.java:584)
	at com.cedarsoftware.util.io.JsonParser.readValue(JsonParser.java:278)
	at com.cedarsoftware.util.io.JsonReader.readObject(JsonReader.java:521)
	... 151 more
2021-08-03 09:01:56,014  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-03 09:01:56,231  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-03 09:01:56,448  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-03 16:50:02,739  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 09:03:57,555 ERROR [main] - Statistics - Statistics file `C:\Users\Windows10\.scalaide\statistics` is corrupted. A new one is being created. Corrupted content was:

com.cedarsoftware.util.io.JsonIoException: error parsing JSON value
	at com.cedarsoftware.util.io.JsonReader.readObject(JsonReader.java:529)
	at com.cedarsoftware.util.io.JsonReader.jsonToJava(JsonReader.java:289)
	at com.cedarsoftware.util.io.JsonReader.jsonToJava(JsonReader.java:262)
	at org.scalaide.core.internal.statistics.Statistics.read(Statistics.scala:74)
	at org.scalaide.core.internal.statistics.Statistics.$anonfun$readStats$1(Statistics.scala:52)
	at org.scalaide.core.internal.statistics.Statistics.$anonfun$readStats$1$adapted(Statistics.scala:51)
	at org.scalaide.core.ScalaIdeDataStore$.$anonfun$validate$2(ScalaIdeDataStore.scala:59)
	at org.scalaide.util.eclipse.EclipseUtils$$anon$3.run(EclipseUtils.scala:230)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.scalaide.util.eclipse.EclipseUtils$.withSafeRunner(EclipseUtils.scala:226)
	at org.scalaide.core.ScalaIdeDataStore$.validate(ScalaIdeDataStore.scala:59)
	at org.scalaide.core.internal.statistics.Statistics.readStats(Statistics.scala:51)
	at org.scalaide.core.internal.statistics.Statistics.<init>(Statistics.scala:30)
	at org.scalaide.core.internal.ScalaPlugin.stats$lzycompute(ScalaPlugin.scala:135)
	at org.scalaide.core.internal.ScalaPlugin.stats(ScalaPlugin.scala:135)
	at org.scalaide.core.internal.ScalaPlugin.statistics(ScalaPlugin.scala:138)
	at org.scalaide.core.internal.ScalaPlugin.start(ScalaPlugin.scala:109)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:779)
	at org.eclipse.osgi.internal.framework.BundleContextImpl$3.run(BundleContextImpl.java:1)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.startActivator(BundleContextImpl.java:772)
	at org.eclipse.osgi.internal.framework.BundleContextImpl.start(BundleContextImpl.java:729)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.startWorker0(EquinoxBundle.java:933)
	at org.eclipse.osgi.internal.framework.EquinoxBundle$EquinoxModule.startWorker(EquinoxBundle.java:309)
	at org.eclipse.osgi.container.Module.doStart(Module.java:581)
	at org.eclipse.osgi.container.Module.start(Module.java:449)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:468)
	at org.eclipse.osgi.internal.hooks.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:103)
	at org.eclipse.osgi.internal.loader.classpath.ClasspathManager.findLocalClass(ClasspathManager.java:529)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.findLocalClass(ModuleClassLoader.java:328)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:368)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:446)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:387)
	at org.eclipse.osgi.internal.loader.ModuleClassLoader.loadClass(ModuleClassLoader.java:150)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at org.eclipse.osgi.internal.framework.EquinoxBundle.loadClass(EquinoxBundle.java:564)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.jdt.internal.ui.filters.FilterDescriptor$1.run(FilterDescriptor.java:135)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.filters.FilterDescriptor.createViewerFilter(FilterDescriptor.java:139)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup$FilterItem.getFilterInstance(CustomFiltersActionGroup.java:187)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.updateViewerFilters(CustomFiltersActionGroup.java:517)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.<init>(CustomFiltersActionGroup.java:275)
	at org.eclipse.jdt.ui.actions.CustomFiltersActionGroup.<init>(CustomFiltersActionGroup.java:241)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.<init>(PackageExplorerActionGroup.java:149)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.makeActions(PackageExplorerPart.java:801)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart.createPartControl(PackageExplorerPart.java:507)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:151)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:147)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:55)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:990)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:955)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:124)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:399)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:318)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:162)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:105)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:74)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:56)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:661)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:546)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:530)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:70)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:992)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:661)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1293)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:97)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:679)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:137)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:49)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:79)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:97)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:61)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:679)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:137)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:69)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:704)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:675)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:767)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$0(PartRenderingEngine.java:738)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:732)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:716)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1076)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1039)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:153)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:680)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:336)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:594)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:148)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:151)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:388)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:243)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1499)
Caused by: com.cedarsoftware.util.io.JsonIoException: EOF reached prematurely
	at com.cedarsoftware.util.io.JsonParser.error(JsonParser.java:584)
	at com.cedarsoftware.util.io.JsonParser.readValue(JsonParser.java:278)
	at com.cedarsoftware.util.io.JsonReader.readObject(JsonReader.java:521)
	... 151 more
2021-08-04 09:04:21,678 ERROR [Worker-3] - System.err - log4j:WARN No appenders could be found for logger (org.eclipse.m2e.core.internal.builder.MavenBuilder).
2021-08-04 09:04:21,679 ERROR [Worker-3] - System.err - log4j:WARN Please initialize the log4j system properly.
2021-08-04 10:13:30,666  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:13:31,078  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:13:34,691 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-04 10:13:34,776 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-04 10:13:34,778 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-04 10:13:34,781 ERROR [Text Viewer Hover Presenter] - IScalaPresentationCompiler$ - Ignoring InterruptException
2021-08-04 10:13:37,449  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:13:37,658  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:13:47,144  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:13:47,365  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:14:13,753  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - ImplicitHighlightingPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:14:13,982  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CustomSemanticAction - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:14:14,937  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 10:14:19,548  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
2021-08-04 15:14:12,694  WARN [org.scalaide.ui.internal.reconciliation.ScalaReconciler] - CallByNameParamAtCreationPresenter - Timeout while waiting for `askLoadedTyped` during semantic highlighting.
